{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/src/views/Split/split.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as s from './splitStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Split = () => {\n  _s();\n  const fixedMinTime = 0; // 이 값을 실제 값으로 초기화해야 합니다.\n  const fixedMaxTime = 100; // 이 값을 실제 값으로 초기화해야 합니다.\n  const timeGap = 10; // 이 값을 실제 값으로 초기화해야 합니다.\n\n  const [rangeMinValue, setRangeMinValue] = useState(fixedMinTime);\n  const [rangeMaxValue, setRangeMaxValue] = useState(fixedMaxTime);\n  const [rangeMinPercent, setRangeMinPercent] = useState(0);\n  const [rangeMaxPercent, setRangeMaxPercent] = useState(0);\n  const prcieRangeMinValueHandler = e => {\n    setRangeMinValue(parseInt(e.target.value));\n  };\n  const prcieRangeMaxValueHandler = e => {\n    setRangeMaxValue(parseInt(e.target.value));\n  };\n  const twoRangeHandler = () => {\n    if (rangeMaxValue - rangeMinValue < timeGap) {\n      setRangeMaxValue(rangeMinValue + timeGap);\n      setRangeMinValue(rangeMaxValue - timeGap);\n    } else {\n      setRangeMinPercent(rangeMinValue / fixedMaxTime * 100);\n      setRangeMaxPercent(100 - rangeMaxValue / fixedMaxTime * 100);\n    }\n  };\n  useEffect(() => {\n    twoRangeHandler();\n  }, [rangeMinValue, rangeMaxValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(s.FilterTimeSlide, {\n      children: /*#__PURE__*/_jsxDEV(s.FilterTimeSlideInner, {\n        rangeMinPercent: rangeMinPercent,\n        rangeMaxPercent: rangeMaxPercent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.FilterTimeRangeWrap, {\n      children: [/*#__PURE__*/_jsxDEV(s.FilterTimeRangeMin, {\n        type: \"range\",\n        min: fixedMinTime,\n        max: fixedMaxTime - timeGap,\n        step: \"1000\",\n        value: rangeMinValue,\n        onChange: prcieRangeMinValueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.FilterTimeRangeMax, {\n        type: \"range\",\n        min: fixedMinTime + timeGap,\n        max: fixedMaxTime,\n        step: \"1000\",\n        value: rangeMaxValue,\n        onChange: prcieRangeMaxValueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Split, \"tdcwmOyhy5uliqZ1mgHsiylQTu0=\");\n_c = Split;\nexport default Split;\nvar _c;\n$RefreshReg$(_c, \"Split\");","map":{"version":3,"names":["React","useState","useEffect","s","jsxDEV","_jsxDEV","Split","_s","fixedMinTime","fixedMaxTime","timeGap","rangeMinValue","setRangeMinValue","rangeMaxValue","setRangeMaxValue","rangeMinPercent","setRangeMinPercent","rangeMaxPercent","setRangeMaxPercent","prcieRangeMinValueHandler","e","parseInt","target","value","prcieRangeMaxValueHandler","twoRangeHandler","style","padding","children","FilterTimeSlide","FilterTimeSlideInner","fileName","_jsxFileName","lineNumber","columnNumber","FilterTimeRangeWrap","FilterTimeRangeMin","type","min","max","step","onChange","FilterTimeRangeMax","_c","$RefreshReg$"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp 복사본/src/views/Split/split.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react';\nimport * as s from './splitStyle';\n\nconst Split: React.FC = () => {\n  const fixedMinTime = 0; // 이 값을 실제 값으로 초기화해야 합니다.\n  const fixedMaxTime = 100; // 이 값을 실제 값으로 초기화해야 합니다.\n  const timeGap = 10; // 이 값을 실제 값으로 초기화해야 합니다.\n\n  const [rangeMinValue, setRangeMinValue] = useState<number>(fixedMinTime);\n  const [rangeMaxValue, setRangeMaxValue] = useState<number>(fixedMaxTime);\n  const [rangeMinPercent, setRangeMinPercent] = useState<number>(0);\n  const [rangeMaxPercent, setRangeMaxPercent] = useState<number>(0);\n\n  const prcieRangeMinValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setRangeMinValue(parseInt(e.target.value));\n  };\n\n  const prcieRangeMaxValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setRangeMaxValue(parseInt(e.target.value));\n  };\n\n  const twoRangeHandler = () => {\n    if (rangeMaxValue - rangeMinValue < timeGap) {\n      setRangeMaxValue(rangeMinValue + timeGap);\n      setRangeMinValue(rangeMaxValue - timeGap);\n    } else {\n      setRangeMinPercent((rangeMinValue / fixedMaxTime) * 100);\n      setRangeMaxPercent(100 - (rangeMaxValue / fixedMaxTime) * 100);\n    }\n  };\n\n  interface FilterTimeSlideInnerProps {\n    rangeMinPercent: number;\n    rangeMaxPercent: number;\n  }\n\n  useEffect(() => {\n    twoRangeHandler();\n  }, [rangeMinValue, rangeMaxValue]);\n\n  return (\n    <div style={{ padding: '50px' }}>\n      <s.FilterTimeSlide>\n        <s.FilterTimeSlideInner\n          rangeMinPercent={rangeMinPercent}\n          rangeMaxPercent={rangeMaxPercent}\n        />\n      </s.FilterTimeSlide>\n      <s.FilterTimeRangeWrap>\n        <s.FilterTimeRangeMin\n          type=\"range\"\n          min={fixedMinTime}\n          max={fixedMaxTime - timeGap}\n          step=\"1000\"\n          value={rangeMinValue}\n          onChange={prcieRangeMinValueHandler}\n        />\n        <s.FilterTimeRangeMax\n          type=\"range\"\n          min={fixedMinTime + timeGap}\n          max={fixedMaxTime}\n          step=\"1000\"\n          value={rangeMaxValue}\n          onChange={prcieRangeMaxValueHandler}\n        />\n      </s.FilterTimeRangeWrap>\n    </div>\n  );\n};\n\nexport default Split;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}