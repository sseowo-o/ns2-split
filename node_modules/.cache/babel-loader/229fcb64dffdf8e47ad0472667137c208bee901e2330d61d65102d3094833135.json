{"ast":null,"code":"import { set } from 'date-fns';\nconst now = new Date();\nconst getTodayAtSpecificHour = function () {\n  let hour = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;\n  return set(now, {\n    hours: hour,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0\n  });\n};\nexport const selectedInterval = [getTodayAtSpecificHour(3)];\nexport const timelineInterval = [getTodayAtSpecificHour(1), getTodayAtSpecificHour(24)];\nfunction getRandomDate() {\n  // 현재 날짜를 가져옵니다.\n  const today = new Date();\n\n  // 오늘의 시작 시간 (00:00:00)을 계산합니다.\n  const startOfDay = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0);\n\n  // 오늘의 끝 시간 (23:59:59)을 계산합니다.\n  const endOfDay = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 23, 59, 59);\n\n  // startOfDay와 endOfDay 사이의 랜덤한 시간을 생성합니다.\n  const randomTime = startOfDay.getTime() + Math.random() * (endOfDay.getTime() - startOfDay.getTime());\n\n  // 랜덤한 시간을 가진 Date 객체를 반환합니다.\n  return new Date(randomTime);\n}\nexport const randomTimes = [getRandomDate(), getRandomDate(), getRandomDate()];","map":{"version":3,"names":["set","now","Date","getTodayAtSpecificHour","hour","arguments","length","undefined","hours","minutes","seconds","milliseconds","selectedInterval","timelineInterval","getRandomDate","today","startOfDay","getFullYear","getMonth","getDate","endOfDay","randomTime","getTime","Math","random","randomTimes"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp 복사본/src/views/Split/datesSource.tsx"],"sourcesContent":["import { set } from 'date-fns';\nimport { useState } from 'react';\n\nconst now = new Date();\n\nconst getTodayAtSpecificHour = (hour = 12) =>\n  set(now, { hours: hour, minutes: 0, seconds: 0, milliseconds: 0 });\n\nexport const selectedInterval: [Date] = [getTodayAtSpecificHour(3)];\n\nexport const timelineInterval: [Date, Date] = [\n  getTodayAtSpecificHour(1),\n  getTodayAtSpecificHour(24),\n];\n\nfunction getRandomDate() {\n  // 현재 날짜를 가져옵니다.\n  const today = new Date();\n\n  // 오늘의 시작 시간 (00:00:00)을 계산합니다.\n  const startOfDay = new Date(\n    today.getFullYear(),\n    today.getMonth(),\n    today.getDate(),\n    0,\n    0,\n    0,\n  );\n\n  // 오늘의 끝 시간 (23:59:59)을 계산합니다.\n  const endOfDay = new Date(\n    today.getFullYear(),\n    today.getMonth(),\n    today.getDate(),\n    23,\n    59,\n    59,\n  );\n\n  // startOfDay와 endOfDay 사이의 랜덤한 시간을 생성합니다.\n  const randomTime =\n    startOfDay.getTime() +\n    Math.random() * (endOfDay.getTime() - startOfDay.getTime());\n\n  // 랜덤한 시간을 가진 Date 객체를 반환합니다.\n  return new Date(randomTime);\n}\n\nexport const randomTimes: [Date, Date, Date] = [\n  getRandomDate(),\n  getRandomDate(),\n  getRandomDate(),\n];\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,UAAU;AAG9B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;AAEtB,MAAMC,sBAAsB,GAAG,SAAAA,CAAA;EAAA,IAACC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,OACvCL,GAAG,CAACC,GAAG,EAAE;IAAEO,KAAK,EAAEJ,IAAI;IAAEK,OAAO,EAAE,CAAC;IAAEC,OAAO,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAE,CAAC,CAAC;AAAA;AAEpE,OAAO,MAAMC,gBAAwB,GAAG,CAACT,sBAAsB,CAAC,CAAC,CAAC,CAAC;AAEnE,OAAO,MAAMU,gBAA8B,GAAG,CAC5CV,sBAAsB,CAAC,CAAC,CAAC,EACzBA,sBAAsB,CAAC,EAAE,CAAC,CAC3B;AAED,SAASW,aAAaA,CAAA,EAAG;EACvB;EACA,MAAMC,KAAK,GAAG,IAAIb,IAAI,CAAC,CAAC;;EAExB;EACA,MAAMc,UAAU,GAAG,IAAId,IAAI,CACzBa,KAAK,CAACE,WAAW,CAAC,CAAC,EACnBF,KAAK,CAACG,QAAQ,CAAC,CAAC,EAChBH,KAAK,CAACI,OAAO,CAAC,CAAC,EACf,CAAC,EACD,CAAC,EACD,CACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,IAAIlB,IAAI,CACvBa,KAAK,CAACE,WAAW,CAAC,CAAC,EACnBF,KAAK,CAACG,QAAQ,CAAC,CAAC,EAChBH,KAAK,CAACI,OAAO,CAAC,CAAC,EACf,EAAE,EACF,EAAE,EACF,EACF,CAAC;;EAED;EACA,MAAME,UAAU,GACdL,UAAU,CAACM,OAAO,CAAC,CAAC,GACpBC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIJ,QAAQ,CAACE,OAAO,CAAC,CAAC,GAAGN,UAAU,CAACM,OAAO,CAAC,CAAC,CAAC;;EAE7D;EACA,OAAO,IAAIpB,IAAI,CAACmB,UAAU,CAAC;AAC7B;AAEA,OAAO,MAAMI,WAA+B,GAAG,CAC7CX,aAAa,CAAC,CAAC,EACfA,aAAa,CAAC,CAAC,EACfA,aAAa,CAAC,CAAC,CAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}