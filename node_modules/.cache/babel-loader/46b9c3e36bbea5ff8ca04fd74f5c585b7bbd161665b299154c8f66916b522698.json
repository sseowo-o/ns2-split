{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp/src/views/LogIn/LoginForm.tsx\";\nimport React from 'react';\nimport { withFormik } from 'formik';\nimport { Button } from './LoginFormStyle';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InnerForm = props => {\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    ref\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"form-signin\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            name: \"email\",\n            id: \"floatingInput\",\n            placeholder: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"floatingInput\",\n            children: \"EmailAddress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'auto'\n          },\n          className: \"invalid-feedback\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            id: \"floatingPassword\",\n            placeholder: \"Password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"floatingPassword\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'auto'\n          },\n          className: \"invalid-feedback\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isSubmitting || !!(errors.email && touched.email) || !!(errors.password && touched.password),\n          className: \"w-100 btn btn-lg btn-warning\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = InnerForm;\nconst LoginForm = withFormik({\n  mapPropsToValues: props => ({\n    email: props.initialEmail,\n    password: props.initialPassword\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Email isnot valid').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  }),\n  handleSubmit(_ref) {\n    let {\n      email,\n      password\n    } = _ref;\n    console.log('Email', email);\n    console.log('Password', password);\n  }\n})(InnerForm);\n_c2 = LoginForm;\nconst Login = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 3\n}, this);\n_c3 = Login;\nexport default Login;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InnerForm\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"names":["React","withFormik","Button","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","InnerForm","props","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","ref","children","className","onSubmit","type","name","id","placeholder","onChange","onBlur","value","email","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","style","display","password","disabled","_c","LoginForm","mapPropsToValues","initialEmail","initialPassword","validationSchema","object","shape","string","required","_ref","console","log","_c2","Login","_c3","$RefreshReg$"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp/src/views/LogIn/LoginForm.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { withFormik, FormikProps } from 'formik';\nimport {\n  Form,\n  Title,\n  FormRow,\n  Input,\n  CheckBox,\n  Button,\n} from './LoginFormStyle';\nimport * as Yup from 'yup';\n\ninterface FormValues {\n  email?: string;\n  password?: string;\n}\n\ninterface OtherProps {\n  title?: string;\n  ref?: any;\n}\ninterface MyFormprops {\n  initialEmail?: string;\n  initialPassword?: string;\n  login?: any;\n}\n\nconst InnerForm = (props: OtherProps & FormikProps<FormValues>) => {\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    ref,\n  } = props;\n\n  return (\n    <>\n      <main className=\"form-signin\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-floating\">\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              name=\"email\"\n              id=\"floatingInput\"\n              placeholder=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n            <label htmlFor=\"floatingInput\">EmailAddress</label>\n          </div>\n          {touched.email && errors.email && (\n            <div style={{ display: 'auto' }} className=\"invalid-feedback\">\n              {errors.email}\n            </div>\n          )}\n          <div className=\"form-floating mt-3\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              id=\"floatingPassword\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            <label htmlFor=\"floatingPassword\">Password</label>\n          </div>\n          {touched.password && errors.password && (\n            <div style={{ display: 'auto' }} className=\"invalid-feedback\">\n              {errors.password}\n            </div>\n          )}\n          <Button\n            disabled={\n              isSubmitting ||\n              !!(errors.email && touched.email) ||\n              !!(errors.password && touched.password)\n            }\n            className=\"w-100 btn btn-lg btn-warning\"\n            type=\"submit\"\n          />\n        </form>\n      </main>\n    </>\n  );\n};\n\nconst LoginForm = withFormik<MyFormprops, FormValues>({\n  mapPropsToValues: (props) => ({\n    email: props.initialEmail,\n    password: props.initialPassword,\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .email('Email isnot valid')\n      .required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  }),\n  handleSubmit({ email, password }: FormValues) {\n    console.log('Email', email);\n    console.log('Password', password);\n  },\n})(InnerForm);\n\nconst Login: React.FC<{}> = (props: any) => (\n  <div>\n    <LoginForm />\n  </div>\n);\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}