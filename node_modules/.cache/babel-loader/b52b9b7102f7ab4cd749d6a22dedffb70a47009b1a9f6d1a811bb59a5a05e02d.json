{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/src/components/TimelineSlider/Tick.tsx\";\nimport React from 'react';\nimport { getMinutes } from 'date-fns';\nimport { TickLabel } from './StyledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tick = _ref => {\n  let {\n    tick,\n    count,\n    format\n  } = _ref;\n  const isFullHour = !getMinutes(tick.value);\n  const tickLabelStyle = {\n    marginLeft: `${-(100 / count) / 2}%`,\n    width: `${100 / count}%`,\n    left: `${tick.percent}%`\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isFullHour && /*#__PURE__*/_jsxDEV(TickLabel, {\n      style: tickLabelStyle,\n      children: format(tick.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = Tick;\nexport default Tick;\nvar _c;\n$RefreshReg$(_c, \"Tick\");","map":{"version":3,"names":["React","getMinutes","TickLabel","jsxDEV","_jsxDEV","Fragment","_Fragment","Tick","_ref","tick","count","format","isFullHour","value","tickLabelStyle","marginLeft","width","left","percent","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp 복사본/src/components/TimelineSlider/Tick.tsx"],"sourcesContent":["import React from 'react';\nimport { getMinutes } from 'date-fns';\n\nimport { TickLabel, TickMarker } from './StyledComponents';\n\ninterface TickProps {\n  tick: {\n    id: string;\n    value: number;\n    percent: number;\n  };\n  count: number;\n  format: (value: number) => string;\n}\n\nconst Tick: React.FC<TickProps> = ({ tick, count, format }) => {\n  const isFullHour = !getMinutes(tick.value);\n\n  const tickLabelStyle = {\n    marginLeft: `${-(100 / count) / 2}%`,\n    width: `${100 / count}%`,\n    left: `${tick.percent}%`,\n  };\n\n  return (\n    <>\n      {isFullHour && (\n        <TickLabel style={tickLabelStyle}>{format(tick.value)}</TickLabel>\n      )}\n    </>\n  );\n};\n\nexport default Tick;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,UAAU;AAErC,SAASC,SAAS,QAAoB,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAY3D,MAAMC,IAAyB,GAAGC,IAAA,IAA6B;EAAA,IAA5B;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAAH,IAAA;EACxD,MAAMI,UAAU,GAAG,CAACX,UAAU,CAACQ,IAAI,CAACI,KAAK,CAAC;EAE1C,MAAMC,cAAc,GAAG;IACrBC,UAAU,EAAG,GAAE,EAAE,GAAG,GAAGL,KAAK,CAAC,GAAG,CAAE,GAAE;IACpCM,KAAK,EAAG,GAAE,GAAG,GAAGN,KAAM,GAAE;IACxBO,IAAI,EAAG,GAAER,IAAI,CAACS,OAAQ;EACxB,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACGP,UAAU,iBACTR,OAAA,CAACF,SAAS;MAACkB,KAAK,EAAEN,cAAe;MAAAK,QAAA,EAAER,MAAM,CAACF,IAAI,CAACI,KAAK;IAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAClE,gBACD,CAAC;AAEP,CAAC;AAACC,EAAA,GAhBIlB,IAAyB;AAkB/B,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}