{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/src/views/Split/split.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as s from './splitStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst split = () => {\n  _s();\n  const fixedMinTime = 0; // 이 값을 실제 값으로 초기화해야 합니다.\n  const fixedMaxTime = 100; // 이 값을 실제 값으로 초기화해야 합니다.\n  const TimeGap = 10; // 이 값을 실제 값으로 초기화해야 합니다.\n\n  const [rangeMinValue, setRangeMinValue] = useState(fixedMinPrice);\n  const [rangeMaxValue, setRangeMaxValue] = useState(fixedMaxPrice);\n  const [rangeMinPercent, setRangeMinPercent] = useState(0);\n  const [rangeMaxPercent, setRangeMaxPercent] = useState(0);\n  const prcieRangeMinValueHandler = e => {\n    setRangeMinValue(parseInt(e.target.value));\n  };\n  const prcieRangeMaxValueHandler = e => {\n    setRangeMaxValue(parseInt(e.target.value));\n  };\n  const twoRangeHandler = () => {\n    if (rangeMaxValue - rangeMinValue < priceGap) {\n      setRangeMaxValue(rangeMinValue + priceGap);\n      setRangeMinValue(rangeMaxValue - priceGap);\n    } else {\n      setRangeMinPercent(rangeMinValue / fixedMaxPrice * 100);\n      setRangeMaxPercent(100 - rangeMaxValue / fixedMaxPrice * 100);\n    }\n  };\n  useEffect(() => {\n    twoRangeHandler();\n  }, [rangeMinValue, rangeMaxValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(s.FilterTimeSlide, {\n      children: /*#__PURE__*/_jsxDEV(s.FilterTimeSlideInner, {\n        rangeMinPercent: rangeMinPercent,\n        rangeMaxPercent: rangeMaxPercent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.FilterTimeRangeWrap, {\n      children: [/*#__PURE__*/_jsxDEV(s.FilterTimeRangeMin, {\n        type: \"range\",\n        min: fixedMinPrice,\n        max: fixedMaxPrice - priceGap,\n        step: \"1000\",\n        value: rangeMinValue,\n        onChange: e => {\n          prcieRangeMinValueHandler(e);\n          twoRangeHandler();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.FilterTimeRangeMax, {\n        type: \"range\",\n        min: fixedMinPrice + priceGap,\n        max: fixedMaxPrice,\n        step: \"1000\",\n        value: rangeMaxValue,\n        onChange: e => {\n          prcieRangeMaxValueHandler(e);\n          twoRangeHandler();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(split, \"V8D7W7SCFd7pX/lhzAQn8+5atYk=\");\nexport default split;","map":{"version":3,"names":["React","useState","s","jsxDEV","_jsxDEV","split","_s","fixedMinTime","fixedMaxTime","TimeGap","rangeMinValue","setRangeMinValue","fixedMinPrice","rangeMaxValue","setRangeMaxValue","fixedMaxPrice","rangeMinPercent","setRangeMinPercent","rangeMaxPercent","setRangeMaxPercent","prcieRangeMinValueHandler","e","parseInt","target","value","prcieRangeMaxValueHandler","twoRangeHandler","priceGap","useEffect","style","padding","children","FilterTimeSlide","FilterTimeSlideInner","fileName","_jsxFileName","lineNumber","columnNumber","FilterTimeRangeWrap","FilterTimeRangeMin","type","min","max","step","onChange","FilterTimeRangeMax"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp 복사본/src/views/Split/split.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as s from './splitStyle';\n\nconst split = () => {\n  const fixedMinTime = 0; // 이 값을 실제 값으로 초기화해야 합니다.\n  const fixedMaxTime = 100; // 이 값을 실제 값으로 초기화해야 합니다.\n  const TimeGap = 10; // 이 값을 실제 값으로 초기화해야 합니다.\n\n  const [rangeMinValue, setRangeMinValue] = useState(fixedMinPrice);\n  const [rangeMaxValue, setRangeMaxValue] = useState(fixedMaxPrice);\n  const [rangeMinPercent, setRangeMinPercent] = useState(0);\n  const [rangeMaxPercent, setRangeMaxPercent] = useState(0);\n\n  const prcieRangeMinValueHandler = (e) => {\n    setRangeMinValue(parseInt(e.target.value));\n  };\n\n  const prcieRangeMaxValueHandler = (e) => {\n    setRangeMaxValue(parseInt(e.target.value));\n  };\n\n  const twoRangeHandler = () => {\n    if (rangeMaxValue - rangeMinValue < priceGap) {\n      setRangeMaxValue(rangeMinValue + priceGap);\n      setRangeMinValue(rangeMaxValue - priceGap);\n    } else {\n      setRangeMinPercent((rangeMinValue / fixedMaxPrice) * 100);\n      setRangeMaxPercent(100 - (rangeMaxValue / fixedMaxPrice) * 100);\n    }\n  };\n\n  useEffect(() => {\n    twoRangeHandler();\n  }, [rangeMinValue, rangeMaxValue]);\n\n  return (\n    <div style={{ padding: '50px' }}>\n      <s.FilterTimeSlide>\n        <s.FilterTimeSlideInner\n          rangeMinPercent={rangeMinPercent}\n          rangeMaxPercent={rangeMaxPercent}\n        />\n      </s.FilterTimeSlide>\n      <s.FilterTimeRangeWrap>\n        <s.FilterTimeRangeMin\n          type=\"range\"\n          min={fixedMinPrice}\n          max={fixedMaxPrice - priceGap}\n          step=\"1000\"\n          value={rangeMinValue}\n          onChange={(e) => {\n            prcieRangeMinValueHandler(e);\n            twoRangeHandler();\n          }}\n        />\n        <s.FilterTimeRangeMax\n          type=\"range\"\n          min={fixedMinPrice + priceGap}\n          max={fixedMaxPrice}\n          step=\"1000\"\n          value={rangeMaxValue}\n          onChange={(e) => {\n            prcieRangeMaxValueHandler(e);\n            twoRangeHandler();\n          }}\n        />\n      </s.FilterTimeRangeWrap>\n    </div>\n  );\n};\n\nexport default split;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}