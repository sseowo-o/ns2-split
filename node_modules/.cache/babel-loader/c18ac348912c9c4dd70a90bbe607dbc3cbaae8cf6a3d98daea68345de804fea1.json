{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/src/views/Split/split.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as s from './splitStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Split = _ref => {\n  _s();\n  let {\n    fixedMinPrice,\n    fixedMaxPrice,\n    priceGap\n  } = _ref;\n  const [rangeMinValue, setRangeMinValue] = useState(fixedMinPrice);\n  const [rangeMaxValue, setRangeMaxValue] = useState(fixedMaxPrice);\n  const [rangeMinPercent, setRangeMinPercent] = useState(0);\n  const [rangeMaxPercent, setRangeMaxPercent] = useState(0);\n  const priceRangeMinValueHandler = e => {\n    setRangeMinValue(parseInt(e.target.value, 10)); // 진수 파라미터를 10으로 설정\n  };\n\n  const priceRangeMaxValueHandler = e => {\n    setRangeMaxValue(parseInt(e.target.value, 10)); // 진수 파라미터를 10으로 설정\n  };\n\n  const twoRangeHandler = () => {\n    if (rangeMaxValue - rangeMinValue < priceGap) {\n      setRangeMaxValue(rangeMinValue + priceGap);\n      setRangeMinValue(rangeMaxValue - priceGap);\n    } else {\n      setRangeMinPercent(rangeMinValue / fixedMaxPrice * 100);\n      setRangeMaxPercent(100 - rangeMaxValue / fixedMaxPrice * 100);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(s.FilterTimeSlide, {\n      children: /*#__PURE__*/_jsxDEV(s.FilterTimeSlideInner, {\n        rangeMinPercent: rangeMinPercent,\n        rangeMaxPercent: rangeMaxPercent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.FilterTimeRangeWrap, {\n      children: [/*#__PURE__*/_jsxDEV(s.FilterTimeRangeMin, {\n        type: \"range\",\n        min: fixedMinPrice,\n        max: fixedMaxPrice - priceGap,\n        step: 1000,\n        value: rangeMinValue,\n        onChange: e => {\n          priceRangeMinValueHandler(e);\n          twoRangeHandler();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.FilterTimeRangeMax, {\n        type: \"range\",\n        min: fixedMinPrice + priceGap,\n        max: fixedMaxPrice,\n        step: 1000,\n        value: rangeMaxValue,\n        onChange: e => {\n          priceRangeMaxValueHandler(e);\n          twoRangeHandler();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Split, \"8eUwJQ8pGAoFEGbAC/xdYrC1XEQ=\");\n_c = Split;\nexport default Split;\nvar _c;\n$RefreshReg$(_c, \"Split\");","map":{"version":3,"names":["React","useState","s","jsxDEV","_jsxDEV","Split","_ref","_s","fixedMinPrice","fixedMaxPrice","priceGap","rangeMinValue","setRangeMinValue","rangeMaxValue","setRangeMaxValue","rangeMinPercent","setRangeMinPercent","rangeMaxPercent","setRangeMaxPercent","priceRangeMinValueHandler","e","parseInt","target","value","priceRangeMaxValueHandler","twoRangeHandler","style","padding","children","FilterTimeSlide","FilterTimeSlideInner","fileName","_jsxFileName","lineNumber","columnNumber","FilterTimeRangeWrap","FilterTimeRangeMin","type","min","max","step","onChange","FilterTimeRangeMax","_c","$RefreshReg$"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp 복사본/src/views/Split/split.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as s from './splitStyle';\n\ninterface SplitProps {\n  fixedMinPrice: number;\n  fixedMaxPrice: number;\n  priceGap: number;\n}\n\nconst Split: React.FC<SplitProps> = ({\n  fixedMinPrice,\n  fixedMaxPrice,\n  priceGap,\n}) => {\n  const [rangeMinValue, setRangeMinValue] = useState<number>(fixedMinPrice);\n  const [rangeMaxValue, setRangeMaxValue] = useState<number>(fixedMaxPrice);\n  const [rangeMinPercent, setRangeMinPercent] = useState<number>(0);\n  const [rangeMaxPercent, setRangeMaxPercent] = useState<number>(0);\n\n  const priceRangeMinValueHandler = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRangeMinValue(parseInt(e.target.value, 10)); // 진수 파라미터를 10으로 설정\n  };\n\n  const priceRangeMaxValueHandler = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRangeMaxValue(parseInt(e.target.value, 10)); // 진수 파라미터를 10으로 설정\n  };\n\n  const twoRangeHandler = () => {\n    if (rangeMaxValue - rangeMinValue < priceGap) {\n      setRangeMaxValue(rangeMinValue + priceGap);\n      setRangeMinValue(rangeMaxValue - priceGap);\n    } else {\n      setRangeMinPercent((rangeMinValue / fixedMaxPrice) * 100);\n      setRangeMaxPercent(100 - (rangeMaxValue / fixedMaxPrice) * 100);\n    }\n  };\n\n  return (\n    <div style={{ padding: '50px' }}>\n      <s.FilterTimeSlide>\n        <s.FilterTimeSlideInner\n          rangeMinPercent={rangeMinPercent}\n          rangeMaxPercent={rangeMaxPercent}\n        />\n      </s.FilterTimeSlide>\n      <s.FilterTimeRangeWrap>\n        <s.FilterTimeRangeMin\n          type=\"range\"\n          min={fixedMinPrice}\n          max={fixedMaxPrice - priceGap}\n          step={1000}\n          value={rangeMinValue}\n          onChange={(e) => {\n            priceRangeMinValueHandler(e);\n            twoRangeHandler();\n          }}\n        />\n        <s.FilterTimeRangeMax\n          type=\"range\"\n          min={fixedMinPrice + priceGap}\n          max={fixedMaxPrice}\n          step={1000}\n          value={rangeMaxValue}\n          onChange={(e) => {\n            priceRangeMaxValueHandler(e);\n            twoRangeHandler();\n          }}\n        />\n      </s.FilterTimeRangeWrap>\n    </div>\n  );\n};\n\nexport default Split;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,CAAC,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQlC,MAAMC,KAA2B,GAAGC,IAAA,IAI9B;EAAAC,EAAA;EAAA,IAJ+B;IACnCC,aAAa;IACbC,aAAa;IACbC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAASO,aAAa,CAAC;EACzE,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAASQ,aAAa,CAAC;EACzE,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAS,CAAC,CAAC;EACjE,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAS,CAAC,CAAC;EAEjE,MAAMkB,yBAAyB,GAC7BC,CAAsC,IACnC;IACHR,gBAAgB,CAACS,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC;;EAED,MAAMC,yBAAyB,GAC7BJ,CAAsC,IACnC;IACHN,gBAAgB,CAACO,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC;;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIZ,aAAa,GAAGF,aAAa,GAAGD,QAAQ,EAAE;MAC5CI,gBAAgB,CAACH,aAAa,GAAGD,QAAQ,CAAC;MAC1CE,gBAAgB,CAACC,aAAa,GAAGH,QAAQ,CAAC;IAC5C,CAAC,MAAM;MACLM,kBAAkB,CAAEL,aAAa,GAAGF,aAAa,GAAI,GAAG,CAAC;MACzDS,kBAAkB,CAAC,GAAG,GAAIL,aAAa,GAAGJ,aAAa,GAAI,GAAG,CAAC;IACjE;EACF,CAAC;EAED,oBACEL,OAAA;IAAKsB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BxB,OAAA,CAACF,CAAC,CAAC2B,eAAe;MAAAD,QAAA,eAChBxB,OAAA,CAACF,CAAC,CAAC4B,oBAAoB;QACrBf,eAAe,EAAEA,eAAgB;QACjCE,eAAe,EAAEA;MAAgB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe,CAAC,eACpB9B,OAAA,CAACF,CAAC,CAACiC,mBAAmB;MAAAP,QAAA,gBACpBxB,OAAA,CAACF,CAAC,CAACkC,kBAAkB;QACnBC,IAAI,EAAC,OAAO;QACZC,GAAG,EAAE9B,aAAc;QACnB+B,GAAG,EAAE9B,aAAa,GAAGC,QAAS;QAC9B8B,IAAI,EAAE,IAAK;QACXjB,KAAK,EAAEZ,aAAc;QACrB8B,QAAQ,EAAGrB,CAAC,IAAK;UACfD,yBAAyB,CAACC,CAAC,CAAC;UAC5BK,eAAe,CAAC,CAAC;QACnB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF9B,OAAA,CAACF,CAAC,CAACwC,kBAAkB;QACnBL,IAAI,EAAC,OAAO;QACZC,GAAG,EAAE9B,aAAa,GAAGE,QAAS;QAC9B6B,GAAG,EAAE9B,aAAc;QACnB+B,IAAI,EAAE,IAAK;QACXjB,KAAK,EAAEV,aAAc;QACrB4B,QAAQ,EAAGrB,CAAC,IAAK;UACfI,yBAAyB,CAACJ,CAAC,CAAC;UAC5BK,eAAe,CAAC,CAAC;QACnB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACmB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAlEIF,KAA2B;AAAAsC,EAAA,GAA3BtC,KAA2B;AAoEjC,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}