{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/src/components/MultiRangeSlider/MultiRangeSlider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport * as s from './multiRangeSliderStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiRangeSlider = _ref => {\n  _s();\n  let {\n    min,\n    max,\n    points,\n    onPointClick\n  } = _ref;\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(min);\n  const maxValRef = useRef(max);\n  const range = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [initialY, setInitialY] = useState(0);\n  const [initialHeight, setInitialHeight] = useState(16);\n  const getPercent = useCallback(value => Math.round((value - min) / (max - min) * 100), [min, max]);\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxValRef.current);\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, getPercent]);\n  useEffect(() => {\n    const minPercent = getPercent(minValRef.current);\n    const maxPercent = getPercent(maxVal);\n    if (range.current) {\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [maxVal, getPercent]);\n  const handlePointClick = value => {\n    if (value > minVal && value < maxVal) {\n      onPointClick(value);\n      setMinVal(value);\n      minValRef.current = value;\n    }\n  };\n  const handleThumbLeftChange = event => {\n    let value = Math.min(Number(event.target.value), maxVal - 1);\n    const closestPoint = points.reduce((closest, point) => Math.abs(point - value) < Math.abs(closest - value) ? point : closest);\n    value = closestPoint;\n    setMinVal(value);\n    minValRef.current = value;\n  };\n  const handleThumbRightChange = event => {\n    let value = Math.max(Number(event.target.value), minVal + 1);\n    const closestPoint = points.reduce((closest, point) => Math.abs(point - value) < Math.abs(closest - value) ? point : closest);\n    value = closestPoint;\n    setMaxVal(value);\n    maxValRef.current = value;\n  };\n  const handleSliderMouseDown = event => {\n    var _range$current;\n    setIsDragging(true);\n    setInitialY(event.clientY);\n    setInitialHeight(((_range$current = range.current) === null || _range$current === void 0 ? void 0 : _range$current.clientHeight) || 16);\n  };\n  const handleSliderMouseUp = () => {\n    setIsDragging(false);\n  };\n  const handleSliderMouseMove = event => {\n    if (!isDragging) return;\n    const deltaY = event.clientY - initialY;\n    let newHeight = initialHeight + deltaY;\n\n    // 최소 높이를 16px로 제한하고 최대 높이를 40vh로 제한합니다.\n    newHeight = Math.max(16, newHeight);\n    newHeight = Math.min(window.innerHeight * 0.4, newHeight);\n    const percent = newHeight / (window.innerHeight * 0.4) * 100;\n    const newValue = percent / 100 * (max - min) + min;\n    if (newValue >= min && newValue <= max) {\n      setMinVal(newValue);\n      minValRef.current = newValue;\n      setInitialY(event.clientY);\n      setInitialHeight(newHeight);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(s.Container, {\n    children: [/*#__PURE__*/_jsxDEV(s.ThumbLeft, {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: minVal,\n      onChange: handleThumbLeftChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.ThumbRight, {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: maxVal,\n      onChange: handleThumbRightChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.Slider, {\n      ref: range,\n      onMouseDown: handleSliderMouseDown,\n      onMouseUp: handleSliderMouseUp,\n      onMouseMove: handleSliderMouseMove,\n      children: [/*#__PURE__*/_jsxDEV(s.Track, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.Range, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), points.map(point => /*#__PURE__*/_jsxDEV(s.Point, {\n        onClick: () => handlePointClick(point),\n        style: {\n          left: `${getPercent(point)}%`\n        }\n      }, point, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(s.LeftValue, {\n        children: minVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.RightValue, {\n        children: maxVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiRangeSlider, \"Xpb4dOIQ5g+z1Dan1PDUwUq5qIQ=\");\n_c = MultiRangeSlider;\nexport default MultiRangeSlider;\nvar _c;\n$RefreshReg$(_c, \"MultiRangeSlider\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useRef","s","jsxDEV","_jsxDEV","MultiRangeSlider","_ref","_s","min","max","points","onPointClick","minVal","setMinVal","maxVal","setMaxVal","minValRef","maxValRef","range","isDragging","setIsDragging","initialY","setInitialY","initialHeight","setInitialHeight","getPercent","value","Math","round","minPercent","maxPercent","current","style","left","width","handlePointClick","handleThumbLeftChange","event","Number","target","closestPoint","reduce","closest","point","abs","handleThumbRightChange","handleSliderMouseDown","_range$current","clientY","clientHeight","handleSliderMouseUp","handleSliderMouseMove","deltaY","newHeight","window","innerHeight","percent","newValue","Container","children","ThumbLeft","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","ThumbRight","Slider","ref","onMouseDown","onMouseUp","onMouseMove","Track","Range","map","Point","onClick","LeftValue","RightValue","_c","$RefreshReg$"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp 복사본/src/components/MultiRangeSlider/MultiRangeSlider.tsx"],"sourcesContent":["import React, {\n  ChangeEvent,\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n  useRef,\n  MouseEvent,\n} from 'react';\n\nimport * as s from './multiRangeSliderStyle';\n\ninterface MultiRangeSliderProps {\n  min: number;\n  max: number;\n  points: number[];\n  onPointClick: (value: number) => void;\n}\n\nconst MultiRangeSlider: FC<MultiRangeSliderProps> = ({\n  min,\n  max,\n  points,\n  onPointClick,\n}) => {\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(min);\n  const maxValRef = useRef(max);\n  const range = useRef<HTMLDivElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [initialY, setInitialY] = useState(0);\n  const [initialHeight, setInitialHeight] = useState(16);\n\n  const getPercent = useCallback(\n    (value: number) => Math.round(((value - min) / (max - min)) * 100),\n    [min, max],\n  );\n\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxValRef.current);\n\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, getPercent]);\n\n  useEffect(() => {\n    const minPercent = getPercent(minValRef.current);\n    const maxPercent = getPercent(maxVal);\n\n    if (range.current) {\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [maxVal, getPercent]);\n\n  const handlePointClick = (value: number) => {\n    if (value > minVal && value < maxVal) {\n      onPointClick(value);\n      setMinVal(value);\n      minValRef.current = value;\n    }\n  };\n\n  const handleThumbLeftChange = (event: ChangeEvent<HTMLInputElement>) => {\n    let value = Math.min(Number(event.target.value), maxVal - 1);\n    const closestPoint = points.reduce((closest, point) =>\n      Math.abs(point - value) < Math.abs(closest - value) ? point : closest,\n    );\n    value = closestPoint;\n    setMinVal(value);\n    minValRef.current = value;\n  };\n\n  const handleThumbRightChange = (event: ChangeEvent<HTMLInputElement>) => {\n    let value = Math.max(Number(event.target.value), minVal + 1);\n    const closestPoint = points.reduce((closest, point) =>\n      Math.abs(point - value) < Math.abs(closest - value) ? point : closest,\n    );\n    value = closestPoint;\n    setMaxVal(value);\n    maxValRef.current = value;\n  };\n\n  const handleSliderMouseDown = (event: MouseEvent<HTMLDivElement>) => {\n    setIsDragging(true);\n    setInitialY(event.clientY);\n    setInitialHeight(range.current?.clientHeight || 16);\n  };\n\n  const handleSliderMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  const handleSliderMouseMove = (event: MouseEvent<HTMLDivElement>) => {\n    if (!isDragging) return;\n\n    const deltaY = event.clientY - initialY;\n    let newHeight = initialHeight + deltaY;\n\n    // 최소 높이를 16px로 제한하고 최대 높이를 40vh로 제한합니다.\n    newHeight = Math.max(16, newHeight);\n    newHeight = Math.min(window.innerHeight * 0.4, newHeight);\n\n    const percent = (newHeight / (window.innerHeight * 0.4)) * 100;\n    const newValue = (percent / 100) * (max - min) + min;\n\n    if (newValue >= min && newValue <= max) {\n      setMinVal(newValue);\n      minValRef.current = newValue;\n      setInitialY(event.clientY);\n      setInitialHeight(newHeight);\n    }\n  };\n\n  return (\n    <s.Container>\n      <s.ThumbLeft\n        type=\"range\"\n        min={min}\n        max={max}\n        value={minVal}\n        onChange={handleThumbLeftChange}\n      />\n      <s.ThumbRight\n        type=\"range\"\n        min={min}\n        max={max}\n        value={maxVal}\n        onChange={handleThumbRightChange}\n      />\n\n      <s.Slider\n        ref={range}\n        onMouseDown={handleSliderMouseDown}\n        onMouseUp={handleSliderMouseUp}\n        onMouseMove={handleSliderMouseMove}\n      >\n        <s.Track />\n        <s.Range />\n        {points.map((point) => (\n          <s.Point\n            key={point}\n            onClick={() => handlePointClick(point)}\n            style={{ left: `${getPercent(point)}%` }}\n          />\n        ))}\n        <s.LeftValue>{minVal}</s.LeftValue>\n        <s.RightValue>{maxVal}</s.RightValue>\n      </s.Slider>\n    </s.Container>\n  );\n};\n\nexport default MultiRangeSlider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}