{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/src/views/Split/split.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport * as s from './multiRangeSliderStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiRangeSlider = _ref => {\n  _s();\n  let {\n    min,\n    max,\n    points,\n    onPointClick\n  } = _ref;\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(min);\n  const maxValRef = useRef(max);\n  const range = useRef(null);\n  const getPercent = useCallback(value => Math.round((value - min) / (max - min) * 100), [min, max]);\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxValRef.current);\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, getPercent]);\n  useEffect(() => {\n    const minPercent = getPercent(minValRef.current);\n    const maxPercent = getPercent(maxVal);\n    if (range.current) {\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [maxVal, getPercent]);\n  const handlePointClick = value => {\n    // 포인트 클릭 이벤트 핸들러\n    if (value > minVal && value < maxVal) {\n      // 포인트가 min과 max 사이에 있는 경우에만 업데이트\n      onPointClick(value);\n      setMinVal(value);\n      minValRef.current = value;\n    }\n  };\n  const handleThumbLeftChange = event => {\n    let value = Math.min(Number(event.target.value), maxVal - 1);\n    // 현재 thumbLeft 위치보다 작은 포인트가 있는 경우에 가장 가까운 포인트로 이동\n    const closestPoint = points.reduce((closest, point) => Math.abs(point - value) < Math.abs(closest - value) ? point : closest);\n    value = closestPoint;\n    setMinVal(value);\n    minValRef.current = value;\n  };\n  const handleThumbRightChange = event => {\n    let value = Math.max(Number(event.target.value), minVal + 1);\n    // 현재 thumbRight 위치보다 작은 포인트가 있는 경우에 가장 가까운 포인트로 이동\n    const closestPoint = points.reduce((closest, point) => Math.abs(point - value) < Math.abs(closest - value) ? point : closest);\n    value = closestPoint;\n    setMaxVal(value);\n    maxValRef.current = value;\n  };\n  return /*#__PURE__*/_jsxDEV(s.Container, {\n    children: [/*#__PURE__*/_jsxDEV(s.ThumbLeft, {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: minVal,\n      onChange: handleThumbLeftChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.ThumbRight, {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: maxVal,\n      onChange: handleThumbRightChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.Slider, {\n      children: [/*#__PURE__*/_jsxDEV(s.Track, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.Range, {\n        ref: range\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), points.map(point => /*#__PURE__*/_jsxDEV(s.Point, {\n        onClick: () => handlePointClick(point),\n        style: {\n          left: `${getPercent(point)}%`\n        }\n      }, point, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(s.LeftValue, {\n        children: minVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.RightValue, {\n        children: maxVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiRangeSlider, \"To0AX+fow2coG+aI6vGuXqDeI8s=\");\n_c = MultiRangeSlider;\nexport default MultiRangeSlider;\nvar _c;\n$RefreshReg$(_c, \"MultiRangeSlider\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useRef","s","jsxDEV","_jsxDEV","MultiRangeSlider","_ref","_s","min","max","points","onPointClick","minVal","setMinVal","maxVal","setMaxVal","minValRef","maxValRef","range","getPercent","value","Math","round","minPercent","maxPercent","current","style","left","width","handlePointClick","handleThumbLeftChange","event","Number","target","closestPoint","reduce","closest","point","abs","handleThumbRightChange","Container","children","ThumbLeft","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","ThumbRight","Slider","Track","Range","ref","map","Point","onClick","LeftValue","RightValue","_c","$RefreshReg$"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp 복사본/src/views/Split/split.tsx"],"sourcesContent":["import React, {\n  ChangeEvent,\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n  useRef,\n} from 'react';\n\nimport * as s from './multiRangeSliderStyle';\n\ninterface MultiRangeSliderProps {\n  min: number;\n  max: number;\n  points: number[];\n  onPointClick: (value: number) => void;\n}\n\nconst MultiRangeSlider: FC<MultiRangeSliderProps> = ({\n  min,\n  max,\n  points,\n  onPointClick,\n}) => {\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(min);\n  const maxValRef = useRef(max);\n  const range = useRef<HTMLDivElement>(null);\n\n  const getPercent = useCallback(\n    (value: number) => Math.round(((value - min) / (max - min)) * 100),\n    [min, max],\n  );\n\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxValRef.current);\n\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, getPercent]);\n\n  useEffect(() => {\n    const minPercent = getPercent(minValRef.current);\n    const maxPercent = getPercent(maxVal);\n\n    if (range.current) {\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [maxVal, getPercent]);\n\n  const handlePointClick = (value: number) => {\n    // 포인트 클릭 이벤트 핸들러\n    if (value > minVal && value < maxVal) {\n      // 포인트가 min과 max 사이에 있는 경우에만 업데이트\n      onPointClick(value);\n      setMinVal(value);\n      minValRef.current = value;\n    }\n  };\n\n  const handleThumbLeftChange = (event: ChangeEvent<HTMLInputElement>) => {\n    let value = Math.min(Number(event.target.value), maxVal - 1);\n    // 현재 thumbLeft 위치보다 작은 포인트가 있는 경우에 가장 가까운 포인트로 이동\n    const closestPoint = points.reduce((closest, point) =>\n      Math.abs(point - value) < Math.abs(closest - value) ? point : closest,\n    );\n    value = closestPoint;\n    setMinVal(value);\n    minValRef.current = value;\n  };\n\n  const handleThumbRightChange = (event: ChangeEvent<HTMLInputElement>) => {\n    let value = Math.max(Number(event.target.value), minVal + 1);\n    // 현재 thumbRight 위치보다 작은 포인트가 있는 경우에 가장 가까운 포인트로 이동\n    const closestPoint = points.reduce((closest, point) =>\n      Math.abs(point - value) < Math.abs(closest - value) ? point : closest,\n    );\n    value = closestPoint;\n    setMaxVal(value);\n    maxValRef.current = value;\n  };\n\n  return (\n    <s.Container>\n      <s.ThumbLeft\n        type=\"range\"\n        min={min}\n        max={max}\n        value={minVal}\n        onChange={handleThumbLeftChange}\n      />\n      <s.ThumbRight\n        type=\"range\"\n        min={min}\n        max={max}\n        value={maxVal}\n        onChange={handleThumbRightChange}\n      />\n\n      <s.Slider>\n        <s.Track />\n        <s.Range ref={range} />\n        {points.map((point) => (\n          <s.Point\n            key={point}\n            onClick={() => handlePointClick(point)}\n            style={{ left: `${getPercent(point)}%` }}\n          />\n        ))}\n        <s.LeftValue>{minVal}</s.LeftValue>\n        <s.RightValue>{maxVal}</s.RightValue>\n      </s.Slider>\n    </s.Container>\n  );\n};\n\nexport default MultiRangeSlider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAGVC,WAAW,EACXC,SAAS,EACTC,QAAQ,EACRC,MAAM,QACD,OAAO;AAEd,OAAO,KAAKC,CAAC,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS7C,MAAMC,gBAA2C,GAAGC,IAAA,IAK9C;EAAAC,EAAA;EAAA,IAL+C;IACnDC,GAAG;IACHC,GAAG;IACHC,MAAM;IACNC;EACF,CAAC,GAAAL,IAAA;EACC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACQ,GAAG,CAAC;EACzC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAACS,GAAG,CAAC;EACzC,MAAMO,SAAS,GAAGf,MAAM,CAACO,GAAG,CAAC;EAC7B,MAAMS,SAAS,GAAGhB,MAAM,CAACQ,GAAG,CAAC;EAC7B,MAAMS,KAAK,GAAGjB,MAAM,CAAiB,IAAI,CAAC;EAE1C,MAAMkB,UAAU,GAAGrB,WAAW,CAC3BsB,KAAa,IAAKC,IAAI,CAACC,KAAK,CAAE,CAACF,KAAK,GAAGZ,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC,GAAI,GAAG,CAAC,EAClE,CAACA,GAAG,EAAEC,GAAG,CACX,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMwB,UAAU,GAAGJ,UAAU,CAACP,MAAM,CAAC;IACrC,MAAMY,UAAU,GAAGL,UAAU,CAACF,SAAS,CAACQ,OAAO,CAAC;IAEhD,IAAIP,KAAK,CAACO,OAAO,EAAE;MACjBP,KAAK,CAACO,OAAO,CAACC,KAAK,CAACC,IAAI,GAAI,GAAEJ,UAAW,GAAE;MAC3CL,KAAK,CAACO,OAAO,CAACC,KAAK,CAACE,KAAK,GAAI,GAAEJ,UAAU,GAAGD,UAAW,GAAE;IAC3D;EACF,CAAC,EAAE,CAACX,MAAM,EAAEO,UAAU,CAAC,CAAC;EAExBpB,SAAS,CAAC,MAAM;IACd,MAAMwB,UAAU,GAAGJ,UAAU,CAACH,SAAS,CAACS,OAAO,CAAC;IAChD,MAAMD,UAAU,GAAGL,UAAU,CAACL,MAAM,CAAC;IAErC,IAAII,KAAK,CAACO,OAAO,EAAE;MACjBP,KAAK,CAACO,OAAO,CAACC,KAAK,CAACE,KAAK,GAAI,GAAEJ,UAAU,GAAGD,UAAW,GAAE;IAC3D;EACF,CAAC,EAAE,CAACT,MAAM,EAAEK,UAAU,CAAC,CAAC;EAExB,MAAMU,gBAAgB,GAAIT,KAAa,IAAK;IAC1C;IACA,IAAIA,KAAK,GAAGR,MAAM,IAAIQ,KAAK,GAAGN,MAAM,EAAE;MACpC;MACAH,YAAY,CAACS,KAAK,CAAC;MACnBP,SAAS,CAACO,KAAK,CAAC;MAChBJ,SAAS,CAACS,OAAO,GAAGL,KAAK;IAC3B;EACF,CAAC;EAED,MAAMU,qBAAqB,GAAIC,KAAoC,IAAK;IACtE,IAAIX,KAAK,GAAGC,IAAI,CAACb,GAAG,CAACwB,MAAM,CAACD,KAAK,CAACE,MAAM,CAACb,KAAK,CAAC,EAAEN,MAAM,GAAG,CAAC,CAAC;IAC5D;IACA,MAAMoB,YAAY,GAAGxB,MAAM,CAACyB,MAAM,CAAC,CAACC,OAAO,EAAEC,KAAK,KAChDhB,IAAI,CAACiB,GAAG,CAACD,KAAK,GAAGjB,KAAK,CAAC,GAAGC,IAAI,CAACiB,GAAG,CAACF,OAAO,GAAGhB,KAAK,CAAC,GAAGiB,KAAK,GAAGD,OAChE,CAAC;IACDhB,KAAK,GAAGc,YAAY;IACpBrB,SAAS,CAACO,KAAK,CAAC;IAChBJ,SAAS,CAACS,OAAO,GAAGL,KAAK;EAC3B,CAAC;EAED,MAAMmB,sBAAsB,GAAIR,KAAoC,IAAK;IACvE,IAAIX,KAAK,GAAGC,IAAI,CAACZ,GAAG,CAACuB,MAAM,CAACD,KAAK,CAACE,MAAM,CAACb,KAAK,CAAC,EAAER,MAAM,GAAG,CAAC,CAAC;IAC5D;IACA,MAAMsB,YAAY,GAAGxB,MAAM,CAACyB,MAAM,CAAC,CAACC,OAAO,EAAEC,KAAK,KAChDhB,IAAI,CAACiB,GAAG,CAACD,KAAK,GAAGjB,KAAK,CAAC,GAAGC,IAAI,CAACiB,GAAG,CAACF,OAAO,GAAGhB,KAAK,CAAC,GAAGiB,KAAK,GAAGD,OAChE,CAAC;IACDhB,KAAK,GAAGc,YAAY;IACpBnB,SAAS,CAACK,KAAK,CAAC;IAChBH,SAAS,CAACQ,OAAO,GAAGL,KAAK;EAC3B,CAAC;EAED,oBACEhB,OAAA,CAACF,CAAC,CAACsC,SAAS;IAAAC,QAAA,gBACVrC,OAAA,CAACF,CAAC,CAACwC,SAAS;MACVC,IAAI,EAAC,OAAO;MACZnC,GAAG,EAAEA,GAAI;MACTC,GAAG,EAAEA,GAAI;MACTW,KAAK,EAAER,MAAO;MACdgC,QAAQ,EAAEd;IAAsB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF5C,OAAA,CAACF,CAAC,CAAC+C,UAAU;MACXN,IAAI,EAAC,OAAO;MACZnC,GAAG,EAAEA,GAAI;MACTC,GAAG,EAAEA,GAAI;MACTW,KAAK,EAAEN,MAAO;MACd8B,QAAQ,EAAEL;IAAuB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEF5C,OAAA,CAACF,CAAC,CAACgD,MAAM;MAAAT,QAAA,gBACPrC,OAAA,CAACF,CAAC,CAACiD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX5C,OAAA,CAACF,CAAC,CAACkD,KAAK;QAACC,GAAG,EAAEnC;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACtBtC,MAAM,CAAC4C,GAAG,CAAEjB,KAAK,iBAChBjC,OAAA,CAACF,CAAC,CAACqD,KAAK;QAENC,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAACQ,KAAK,CAAE;QACvCX,KAAK,EAAE;UAAEC,IAAI,EAAG,GAAER,UAAU,CAACkB,KAAK,CAAE;QAAG;MAAE,GAFpCA,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF,CAAC,eACF5C,OAAA,CAACF,CAAC,CAACuD,SAAS;QAAAhB,QAAA,EAAE7B;MAAM;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eACnC5C,OAAA,CAACF,CAAC,CAACwD,UAAU;QAAAjB,QAAA,EAAE3B;MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAElB,CAAC;AAACzC,EAAA,CApGIF,gBAA2C;AAAAsD,EAAA,GAA3CtD,gBAA2C;AAsGjD,eAAeA,gBAAgB;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}