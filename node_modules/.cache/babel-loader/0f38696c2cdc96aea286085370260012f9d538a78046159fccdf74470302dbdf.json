{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/src/components/MultiRangeSlider/MultiRangeSlider.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RangeSliderContainer = styled.div`\n  --min: ${props => props.min};\n  --max: ${props => props.max};\n  --step: ${props => props.step};\n  --value: ${props => props.value};\n  --text-value: ${props => props.textValue};\n\n  // Add your CSS styles here\n`;\n_c = RangeSliderContainer;\nconst RangeSliderInput = styled.input`\n  // Add your CSS styles for the input element here\n`;\n_c2 = RangeSliderInput;\nconst RangeSliderOutput = styled.output`\n  // Add your CSS styles for the output element here\n`;\n_c3 = RangeSliderOutput;\nconst RangeSliderProgress = styled.div`\n  // Add your CSS styles for the progress element here\n`;\n_c4 = RangeSliderProgress;\nconst RangeSlider = _ref => {\n  let {\n    min,\n    max,\n    step,\n    value,\n    textValue\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(RangeSliderContainer, {\n    min: min,\n    max: max,\n    step: step,\n    value: value,\n    textValue: textValue,\n    children: [/*#__PURE__*/_jsxDEV(RangeSliderInput, {\n      type: \"range\",\n      min: min,\n      max: max,\n      step: step,\n      value: value,\n      onInput: e => {\n        const newValue = e.target.value;\n        // You can add custom logic here to handle the input change\n        // For example, updating the textValue\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RangeSliderOutput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RangeSliderProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_c5 = RangeSlider;\nexport default RangeSlider;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"RangeSliderContainer\");\n$RefreshReg$(_c2, \"RangeSliderInput\");\n$RefreshReg$(_c3, \"RangeSliderOutput\");\n$RefreshReg$(_c4, \"RangeSliderProgress\");\n$RefreshReg$(_c5, \"RangeSlider\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","RangeSliderContainer","div","props","min","max","step","value","textValue","_c","RangeSliderInput","input","_c2","RangeSliderOutput","output","_c3","RangeSliderProgress","_c4","RangeSlider","_ref","children","type","onInput","e","newValue","target","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp 복사본/src/components/MultiRangeSlider/MultiRangeSlider.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface RangeSliderProps {\n  min: number;\n  max: number;\n  step: number;\n  value: number;\n  textValue: string;\n}\n\nconst RangeSliderContainer = styled.div`\n  --min: ${(props: RangeSliderProps) => props.min};\n  --max: ${(props: RangeSliderProps) => props.max};\n  --step: ${(props: RangeSliderProps) => props.step};\n  --value: ${(props: RangeSliderProps) => props.value};\n  --text-value: ${(props: RangeSliderProps) => props.textValue};\n\n  // Add your CSS styles here\n`;\n\nconst RangeSliderInput = styled.input`\n  // Add your CSS styles for the input element here\n`;\n\nconst RangeSliderOutput = styled.output`\n  // Add your CSS styles for the output element here\n`;\n\nconst RangeSliderProgress = styled.div`\n  // Add your CSS styles for the progress element here\n`;\n\nconst RangeSlider: FC<RangeSliderProps> = ({\n  min,\n  max,\n  step,\n  value,\n  textValue,\n}) => (\n  <RangeSliderContainer\n    min={min}\n    max={max}\n    step={step}\n    value={value}\n    textValue={textValue}\n  >\n    <RangeSliderInput\n      type=\"range\"\n      min={min}\n      max={max}\n      step={step}\n      value={value}\n      onInput={(e: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.target.value;\n        // You can add custom logic here to handle the input change\n        // For example, updating the textValue\n      }}\n    />\n    <RangeSliderOutput />\n    <RangeSliderProgress />\n  </RangeSliderContainer>\n);\n\nexport default RangeSlider;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUvC,MAAMC,oBAAoB,GAAGH,MAAM,CAACI,GAAI;AACxC,WAAYC,KAAuB,IAAKA,KAAK,CAACC,GAAI;AAClD,WAAYD,KAAuB,IAAKA,KAAK,CAACE,GAAI;AAClD,YAAaF,KAAuB,IAAKA,KAAK,CAACG,IAAK;AACpD,aAAcH,KAAuB,IAAKA,KAAK,CAACI,KAAM;AACtD,kBAAmBJ,KAAuB,IAAKA,KAAK,CAACK,SAAU;AAC/D;AACA;AACA,CAAC;AAACC,EAAA,GARIR,oBAAoB;AAU1B,MAAMS,gBAAgB,GAAGZ,MAAM,CAACa,KAAM;AACtC;AACA,CAAC;AAACC,GAAA,GAFIF,gBAAgB;AAItB,MAAMG,iBAAiB,GAAGf,MAAM,CAACgB,MAAO;AACxC;AACA,CAAC;AAACC,GAAA,GAFIF,iBAAiB;AAIvB,MAAMG,mBAAmB,GAAGlB,MAAM,CAACI,GAAI;AACvC;AACA,CAAC;AAACe,GAAA,GAFID,mBAAmB;AAIzB,MAAME,WAAiC,GAAGC,IAAA;EAAA,IAAC;IACzCf,GAAG;IACHC,GAAG;IACHC,IAAI;IACJC,KAAK;IACLC;EACF,CAAC,GAAAW,IAAA;EAAA,oBACCnB,OAAA,CAACC,oBAAoB;IACnBG,GAAG,EAAEA,GAAI;IACTC,GAAG,EAAEA,GAAI;IACTC,IAAI,EAAEA,IAAK;IACXC,KAAK,EAAEA,KAAM;IACbC,SAAS,EAAEA,SAAU;IAAAY,QAAA,gBAErBpB,OAAA,CAACU,gBAAgB;MACfW,IAAI,EAAC,OAAO;MACZjB,GAAG,EAAEA,GAAI;MACTC,GAAG,EAAEA,GAAI;MACTC,IAAI,EAAEA,IAAK;MACXC,KAAK,EAAEA,KAAM;MACbe,OAAO,EAAGC,CAAsC,IAAK;QACnD,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAAClB,KAAK;QAC/B;QACA;MACF;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACF7B,OAAA,CAACa,iBAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrB7B,OAAA,CAACgB,mBAAmB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAAA,CACxB;AAACC,GAAA,GA7BIZ,WAAiC;AA+BvC,eAAeA,WAAW;AAAC,IAAAT,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAnB,GAAA;AAAAmB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}