{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp/src/views/LogIn/LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { EncryptStorage } from 'encrypt-storage';\nimport { Title, LoginButtonBox } from './LoginFormStyle';\nimport { LogoTitle } from '../../styles/Style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const encryptStorage = new EncryptStorage('SECRET_KEY');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [formData, setFormData] = useState({\n    user: '',\n    password: ''\n  });\n  const handleChange = ev => {\n    setFormData({\n      ...formData,\n      [ev.target.name]: ev.target.value\n    });\n  };\n  const handleCheck = () => {\n    if (rememberMe) {\n      encryptStorage.removeItem('loginCredentials');\n    }\n    setRememberMe(rememberMe => !rememberMe);\n  };\n  const handleSubmit = ev => {\n    if (rememberMe) {\n      encryptStorage.setItem('loginCredentials', JSON.stringify(formData));\n    }\n  };\n  useEffect(() => {\n    const storedData = encryptStorage.getItem('loginCredentials');\n    if (storedData) {\n      setRememberMe(true);\n      setFormData(storedData);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"\\uB458\\uB3C4 \\uC5C6\\uB294\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \"\\uD074\\uB77C\\uC6B0\\uB4DC \\uC124\\uC815\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoTitle, {\n      children: \"AI \\uC18C\\uB9AC\\uD39C \\uB85C\\uACE0 (\\uAC00\\uC81C)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginButtonBox, {\n      children: [/*#__PURE__*/_jsxDEV(LoginButton, {\n        variant: \"outlined\",\n        onClick: handleNdpLogin,\n        children: t('sign_in_with_neolab') //Neolab으로 로그인\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n        variant: \"outlined\",\n        onClick: handleAppleLogin,\n        children: t('sign_in_with_apple') //Apple로 로그인\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n        variant: \"outlined\",\n        onClick: handleGoogleLogin,\n        children: t('sign_in_with_google') //Google로 로그인\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginForm, \"K/CZbe7p8JgIuoXydrxTD9Xyo/k=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","useState","EncryptStorage","Title","LoginButtonBox","LogoTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","encryptStorage","rememberMe","setRememberMe","formData","setFormData","user","password","handleChange","ev","target","name","value","handleCheck","removeItem","handleSubmit","setItem","JSON","stringify","storedData","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","LoginButton","variant","onClick","handleNdpLogin","t","handleAppleLogin","handleGoogleLogin","_c","$RefreshReg$"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp/src/views/LogIn/LoginForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { EncryptStorage } from 'encrypt-storage';\nimport { Title, LoginButtonBox } from './LoginFormStyle';\nimport { LogoTitle } from '../../styles/Style';\n\ninterface Credentials {\n  user: string;\n  password: string;\n}\n\nconst LoginForm = () => {\n  const encryptStorage = new EncryptStorage('SECRET_KEY');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [formData, setFormData] = useState<Credentials>({\n    user: '',\n    password: '',\n  });\n\n  const handleChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [ev.target.name]: ev.target.value,\n    });\n  };\n  const handleCheck = () => {\n    if (rememberMe) {\n      encryptStorage.removeItem('loginCredentials');\n    }\n    setRememberMe((rememberMe) => !rememberMe);\n  };\n  const handleSubmit = (ev: React.FormEvent<HTMLFormElement>) => {\n    if (rememberMe) {\n      encryptStorage.setItem('loginCredentials', JSON.stringify(formData));\n    }\n  };\n\n  useEffect(() => {\n    const storedData = encryptStorage.getItem('loginCredentials');\n    if (storedData) {\n      setRememberMe(true);\n      setFormData(storedData);\n    }\n  }, []);\n\n  return (\n    <>\n      <Title>\n        둘도 없는\n        <br />\n        클라우드 설정\n      </Title>\n      <LogoTitle>AI 소리펜 로고 (가제)</LogoTitle>\n      <LoginButtonBox>\n        <LoginButton variant=\"outlined\" onClick={handleNdpLogin}>\n          {\n            t('sign_in_with_neolab') //Neolab으로 로그인\n          }\n        </LoginButton>\n        <LoginButton variant=\"outlined\" onClick={handleAppleLogin}>\n          {\n            t('sign_in_with_apple') //Apple로 로그인\n          }\n        </LoginButton>\n        <LoginButton variant=\"outlined\" onClick={handleGoogleLogin}>\n          {\n            t('sign_in_with_google') //Google로 로그인\n          }\n        </LoginButton>\n      </LoginButtonBox>\n    </>\n  );\n};\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}