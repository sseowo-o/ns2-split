{"ast":null,"code":"var _jsxFileName = \"/Users/seowoo/Desktop/neo_test/wifiapp \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/src/components/TimelineSlider/TimeRange.tsx\";\nimport React from 'react';\nimport { scaleTime } from 'd3-scale';\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider';\nimport { format, addHours, startOfToday, endOfToday, differenceInMilliseconds, isBefore, isAfter, addMinutes } from 'date-fns';\nimport SliderRail from './SliderRail';\nimport Track from './Track';\nimport Tick from './Tick';\nimport Handle from './Handle';\nimport { TimeRangeContainer } from './StyledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultProps = {\n  timelineInterval: [startOfToday(), endOfToday()],\n  selectedInterval: [new Date(), addHours(new Date(), 1)],\n  disabledIntervals: [],\n  containerClassName: '',\n  step: 1000 * 60 * 30,\n  // 30 minutes in milliseconds\n  ticksNumber: 48,\n  // 30 minutes * 48 = 24 hours\n  error: false,\n  mode: 3,\n  formatTick: ms => format(new Date(ms), 'HH:mm'),\n  showNow: true,\n  onChangeCallback: () => 'Change callback not set',\n  onUpdateCallback: () => 'Update callback not set'\n};\nconst getTimelineConfig = (timelineStart, timelineLength) => (date, idPrefix) => {\n  const percent = differenceInMilliseconds(date, timelineStart) / timelineLength * 100;\n  const value = Number(format(date, 'T'));\n  const id = `${idPrefix}-${value}`;\n  return {\n    id,\n    percent,\n    value\n  };\n};\nconst getFormattedBlockedIntervals = function () {\n  let blockedDates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let [startTime, endTime] = arguments.length > 1 ? arguments[1] : undefined;\n  if (!blockedDates.length) return null;\n  const timelineLength = differenceInMilliseconds(endTime, startTime);\n  const getConfig = getTimelineConfig(startTime, timelineLength);\n  const formattedBlockedDates = blockedDates.map((interval, index) => {\n    let {\n      start,\n      end\n    } = interval;\n    const {\n      color\n    } = interval;\n    if (isBefore(start, startTime)) start = startTime;\n    if (isAfter(end, endTime)) end = endTime;\n    const source = getConfig(start, 'blocked-start');\n    const target = getConfig(end, 'blocked-end');\n    return {\n      id: `blocked-track-${index}`,\n      source,\n      target,\n      color\n    };\n  });\n  return formattedBlockedDates;\n};\nconst getNowConfig = _ref => {\n  let [startTime, endTime] = _ref;\n  const timelineLength = differenceInMilliseconds(endTime, startTime);\n  const getConfig = getTimelineConfig(startTime, timelineLength);\n  const source = getConfig(new Date(), 'now-start');\n  const target = getConfig(addMinutes(new Date(), 1), 'now-end');\n  return {\n    id: 'now-track',\n    source,\n    target\n  };\n};\nclass TimeRange extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.onChange = newTime => {\n      const formattedNewTime = newTime.map(t => new Date(t));\n      if (this.props.onChangeCallback) {\n        this.props.onChangeCallback([formattedNewTime[0], formattedNewTime[1]]);\n      }\n    };\n    this.checkIsSelectedIntervalNotValid = (_ref2, source, target) => {\n      let [start, end] = _ref2;\n      const {\n        value: startInterval\n      } = source;\n      const {\n        value: endInterval\n      } = target;\n      if (startInterval > start && endInterval <= end || startInterval >= start && endInterval < end) return true;\n      if (start >= startInterval && end <= endInterval) return true;\n      const isStartInBlockedInterval = start > startInterval && start < endInterval && end >= endInterval;\n      const isEndInBlockedInterval = end < endInterval && end > startInterval && start <= startInterval;\n      return isStartInBlockedInterval || isEndInBlockedInterval;\n    };\n    this.onUpdate = newTime => {\n      const {\n        onUpdateCallback\n      } = this.props;\n      const {\n        disabledIntervals\n      } = this;\n      if (!onUpdateCallback) {\n        return;\n      }\n      if (disabledIntervals !== null && disabledIntervals !== void 0 && disabledIntervals.length) {\n        const isValuesNotValid = disabledIntervals.some(_ref3 => {\n          let {\n            source,\n            target\n          } = _ref3;\n          return this.checkIsSelectedIntervalNotValid([newTime[0], newTime[1]], source, target);\n        });\n        const formattedNewTime = newTime.map(t => new Date(t));\n        onUpdateCallback({\n          error: isValuesNotValid,\n          time: formattedNewTime\n        });\n        return;\n      }\n      const formattedNewTime = newTime.map(t => new Date(t));\n      onUpdateCallback({\n        error: false,\n        time: formattedNewTime\n      });\n    };\n    this.getDateTicks = () => {\n      const {\n        timelineInterval,\n        ticksNumber\n      } = this.props;\n      return scaleTime().domain(timelineInterval !== null && timelineInterval !== void 0 ? timelineInterval : [startOfToday(), endOfToday()]).ticks(ticksNumber).map(t => +t);\n    };\n  }\n  get disabledIntervals() {\n    var _this$props$timelineI;\n    return getFormattedBlockedIntervals(this.props.disabledIntervals, (_this$props$timelineI = this.props.timelineInterval) !== null && _this$props$timelineI !== void 0 ? _this$props$timelineI : [startOfToday(), endOfToday()]);\n  }\n  get now() {\n    var _this$props$timelineI2;\n    return getNowConfig((_this$props$timelineI2 = this.props.timelineInterval) !== null && _this$props$timelineI2 !== void 0 ? _this$props$timelineI2 : [startOfToday(), endOfToday()]);\n  }\n  render() {\n    const {\n      timelineInterval = defaultProps.timelineInterval,\n      selectedInterval = defaultProps.selectedInterval,\n      containerClassName = defaultProps.containerClassName,\n      error = defaultProps.error,\n      step = defaultProps.step,\n      showNow = defaultProps.showNow,\n      formatTick = defaultProps.formatTick\n    } = this.props;\n    const domain = (timelineInterval !== null && timelineInterval !== void 0 ? timelineInterval : [startOfToday(), endOfToday()]).map(t => Number(t));\n    const {\n      disabledIntervals\n    } = this;\n    return /*#__PURE__*/_jsxDEV(TimeRangeContainer, {\n      className: containerClassName,\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        step: step,\n        domain: domain.map(t => +t),\n        onUpdate: this.onUpdate,\n        onChange: this.onChange,\n        values: (selectedInterval !== null && selectedInterval !== void 0 ? selectedInterval : [new Date(), addHours(new Date(), 1)]).map(t => +t),\n        rootStyle: {\n          position: 'relative',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Rail, {\n          children: _ref4 => {\n            let {\n              getRailProps\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(SliderRail, {\n              getRailProps: getRailProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 36\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Handles, {\n          children: _ref5 => {\n            let {\n              handles,\n              getHandleProps\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: handles.map(handle => /*#__PURE__*/_jsxDEV(Handle, {\n                error: error !== null && error !== void 0 ? error : false,\n                handle: handle,\n                domain: domain,\n                getHandleProps: getHandleProps\n              }, handle.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this))\n            }, void 0, false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tracks, {\n          left: false,\n          right: false,\n          children: _ref6 => {\n            let {\n              tracks,\n              getTrackProps\n            } = _ref6;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: tracks === null || tracks === void 0 ? void 0 : tracks.map(_ref7 => {\n                let {\n                  id,\n                  source,\n                  target\n                } = _ref7;\n                return /*#__PURE__*/_jsxDEV(Track, {\n                  error: error !== null && error !== void 0 ? error : false,\n                  source: source,\n                  target: target,\n                  getTrackProps: getTrackProps\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), (disabledIntervals === null || disabledIntervals === void 0 ? void 0 : disabledIntervals.length) && /*#__PURE__*/_jsxDEV(Tracks, {\n          left: false,\n          right: false,\n          children: _ref8 => {\n            let {\n              getTrackProps\n            } = _ref8;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: disabledIntervals.map(_ref9 => {\n                let {\n                  id,\n                  source,\n                  target,\n                  color\n                } = _ref9;\n                return /*#__PURE__*/_jsxDEV(Track, {\n                  error: error !== null && error !== void 0 ? error : false,\n                  source: source,\n                  target: target,\n                  getTrackProps: getTrackProps,\n                  disabled: true,\n                  color: color // Pass the color property here\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), showNow && /*#__PURE__*/_jsxDEV(Tracks, {\n          left: false,\n          right: false,\n          children: _ref10 => {\n            var _this$now, _this$now2, _this$now3;\n            let {\n              getTrackProps\n            } = _ref10;\n            return /*#__PURE__*/_jsxDEV(Track, {\n              error: error !== null && error !== void 0 ? error : false,\n              source: (_this$now2 = this.now) === null || _this$now2 === void 0 ? void 0 : _this$now2.source,\n              target: (_this$now3 = this.now) === null || _this$now3 === void 0 ? void 0 : _this$now3.target,\n              getTrackProps: getTrackProps\n            }, (_this$now = this.now) === null || _this$now === void 0 ? void 0 : _this$now.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Ticks, {\n          values: this.getDateTicks(),\n          children: _ref11 => {\n            let {\n              ticks\n            } = _ref11;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: ticks.map(tick => /*#__PURE__*/_jsxDEV(Tick, {\n                tick: tick,\n                count: ticks.length,\n                format: formatTick !== null && formatTick !== void 0 ? formatTick : ms => format(new Date(ms), 'HH:mm')\n              }, tick.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this))\n            }, void 0, false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n}\nTimeRange.defaultProps = {\n  timelineInterval: [startOfToday(), endOfToday()],\n  selectedInterval: [new Date(), addHours(new Date(), 1)],\n  disabledIntervals: [],\n  containerClassName: '',\n  step: 1000 * 60 * 30,\n  // 30 minutes in milliseconds\n  ticksNumber: 48,\n  // 30 minutes * 48 = 24 hours\n  error: false,\n  mode: 3,\n  formatTick: ms => format(new Date(ms), 'HH:mm'),\n  showNow: true\n};\nTimeRange.defaultProps = defaultProps;\nexport default TimeRange;","map":{"version":3,"names":["React","scaleTime","Slider","Rail","Handles","Tracks","Ticks","format","addHours","startOfToday","endOfToday","differenceInMilliseconds","isBefore","isAfter","addMinutes","SliderRail","Track","Tick","Handle","TimeRangeContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultProps","timelineInterval","selectedInterval","Date","disabledIntervals","containerClassName","step","ticksNumber","error","mode","formatTick","ms","showNow","onChangeCallback","onUpdateCallback","getTimelineConfig","timelineStart","timelineLength","date","idPrefix","percent","value","Number","id","getFormattedBlockedIntervals","blockedDates","arguments","length","undefined","startTime","endTime","getConfig","formattedBlockedDates","map","interval","index","start","end","color","source","target","getNowConfig","_ref","TimeRange","Component","constructor","onChange","newTime","formattedNewTime","t","props","checkIsSelectedIntervalNotValid","_ref2","startInterval","endInterval","isStartInBlockedInterval","isEndInBlockedInterval","onUpdate","isValuesNotValid","some","_ref3","time","getDateTicks","domain","ticks","_this$props$timelineI","now","_this$props$timelineI2","render","className","children","values","rootStyle","position","width","_ref4","getRailProps","fileName","_jsxFileName","lineNumber","columnNumber","_ref5","handles","getHandleProps","handle","left","right","_ref6","tracks","getTrackProps","_ref7","_ref8","_ref9","disabled","_ref10","_this$now","_this$now2","_this$now3","_ref11","tick","count"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp 복사본/src/components/TimelineSlider/TimeRange.tsx"],"sourcesContent":["import React from 'react';\nimport { scaleTime } from 'd3-scale';\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider';\nimport {\n  format,\n  addHours,\n  startOfToday,\n  endOfToday,\n  differenceInMilliseconds,\n  isBefore,\n  isAfter,\n  addMinutes,\n} from 'date-fns';\n\nimport SliderRail from './SliderRail';\nimport Track from './Track';\nimport Tick from './Tick';\nimport Handle from './Handle';\nimport { TimeRangeContainer } from './StyledComponents';\nimport { DisabledInterval, UpdateCallbackData } from './types';\n\ninterface TimeRangeProps {\n  /** Number of steps on the timeline (the default value is 30 minutes) */\n  ticksNumber?: number;\n  /** Selected interval inside the timeline */\n  selectedInterval?: [Date, Date];\n  /** Interval to display */\n  timelineInterval?: [Date, Date];\n  /** Array of disabled intervals inside the timeline */\n  disabledIntervals?: DisabledInterval[];\n  /** ClassName of the wrapping container */\n  containerClassName?: string;\n  sliderRailClassName?: string;\n  /** Number of milliseconds between steps (the default value is 30 minutes) */\n  step?: number;\n  /** Function that determines the format in which the date will be displayed */\n  formatTick?: (ms: number) => string;\n  /** Is the selected interval is not valid */\n  error?: boolean;\n  /** The interaction mode. Value of 1 will allow handles to cross each other.\n   * Value of 2 will keep the sliders from crossing and separated by a step.\n   * Value of 3 will make the handles pushable and keep them a step apart.\n   * ADVANCED: You can also supply a function that will be passed the current\n   * values and the incoming update. Your function should return what the state\n   * should be set as. */\n  mode?: number;\n  onChangeCallback: (formattedNewTime: [Date, Date]) => void;\n  onUpdateCallback: (data: UpdateCallbackData) => void;\n  /**\n   * Set this variable to true if you want to show a line on the timeline that represents the current time.\n   */\n  showNow: boolean;\n}\n\nconst defaultProps: TimeRangeProps = {\n  timelineInterval: [startOfToday(), endOfToday()],\n  selectedInterval: [new Date(), addHours(new Date(), 1)],\n  disabledIntervals: [],\n  containerClassName: '',\n  step: 1000 * 60 * 30, // 30 minutes in milliseconds\n  ticksNumber: 48, // 30 minutes * 48 = 24 hours\n  error: false,\n  mode: 3,\n  formatTick: (ms: number) => format(new Date(ms), 'HH:mm'),\n  showNow: true,\n  onChangeCallback: () => 'Change callback not set',\n  onUpdateCallback: () => 'Update callback not set',\n};\n\nconst getTimelineConfig =\n  (timelineStart: Date, timelineLength: number) =>\n  (date: Date, idPrefix: string) => {\n    const percent =\n      (differenceInMilliseconds(date, timelineStart) / timelineLength) * 100;\n    const value = Number(format(date, 'T'));\n    const id = `${idPrefix}-${value}`;\n    return { id, percent, value };\n  };\n\nconst getFormattedBlockedIntervals = (\n  blockedDates: DisabledInterval[] = [],\n  [startTime, endTime]: Date[],\n) => {\n  if (!blockedDates.length) return null;\n\n  const timelineLength = differenceInMilliseconds(endTime, startTime);\n  const getConfig = getTimelineConfig(startTime, timelineLength);\n\n  const formattedBlockedDates = blockedDates.map((interval, index) => {\n    let { start, end } = interval;\n    const { color } = interval;\n\n    if (isBefore(start, startTime)) start = startTime;\n    if (isAfter(end, endTime)) end = endTime;\n\n    const source = getConfig(start, 'blocked-start');\n    const target = getConfig(end, 'blocked-end');\n\n    return { id: `blocked-track-${index}`, source, target, color };\n  });\n\n  return formattedBlockedDates;\n};\n\nconst getNowConfig = ([startTime, endTime]: Date[]) => {\n  const timelineLength = differenceInMilliseconds(endTime, startTime);\n  const getConfig = getTimelineConfig(startTime, timelineLength);\n  const source = getConfig(new Date(), 'now-start');\n  const target = getConfig(addMinutes(new Date(), 1), 'now-end');\n  return { id: 'now-track', source, target };\n};\n\nclass TimeRange extends React.Component<TimeRangeProps> {\n  static defaultProps: Partial<TimeRangeProps> = {\n    timelineInterval: [startOfToday(), endOfToday()],\n    selectedInterval: [new Date(), addHours(new Date(), 1)],\n    disabledIntervals: [],\n    containerClassName: '',\n    step: 1000 * 60 * 30, // 30 minutes in milliseconds\n    ticksNumber: 48, // 30 minutes * 48 = 24 hours\n    error: false,\n    mode: 3,\n    formatTick: (ms: number) => format(new Date(ms), 'HH:mm'),\n    showNow: true,\n  };\n\n  get disabledIntervals() {\n    return getFormattedBlockedIntervals(\n      this.props.disabledIntervals,\n      this.props.timelineInterval ?? [startOfToday(), endOfToday()],\n    );\n  }\n\n  get now() {\n    return getNowConfig(\n      this.props.timelineInterval ?? [startOfToday(), endOfToday()],\n    );\n  }\n\n  onChange = (newTime: ReadonlyArray<number>) => {\n    const formattedNewTime = newTime.map((t) => new Date(t));\n    if (this.props.onChangeCallback) {\n      this.props.onChangeCallback([formattedNewTime[0], formattedNewTime[1]]);\n    }\n  };\n\n  checkIsSelectedIntervalNotValid = (\n    [start, end]: [number, number],\n    source: { value: number },\n    target: { value: number },\n  ) => {\n    const { value: startInterval } = source;\n    const { value: endInterval } = target;\n\n    if (\n      (startInterval > start && endInterval <= end) ||\n      (startInterval >= start && endInterval < end)\n    )\n      return true;\n    if (start >= startInterval && end <= endInterval) return true;\n\n    const isStartInBlockedInterval =\n      start > startInterval && start < endInterval && end >= endInterval;\n    const isEndInBlockedInterval =\n      end < endInterval && end > startInterval && start <= startInterval;\n\n    return isStartInBlockedInterval || isEndInBlockedInterval;\n  };\n\n  onUpdate = (newTime: ReadonlyArray<number>) => {\n    const { onUpdateCallback } = this.props;\n    const { disabledIntervals } = this;\n    if (!onUpdateCallback) {\n      return;\n    }\n\n    if (disabledIntervals?.length) {\n      const isValuesNotValid = disabledIntervals.some(({ source, target }) =>\n        this.checkIsSelectedIntervalNotValid(\n          [newTime[0], newTime[1]],\n          source,\n          target,\n        ),\n      );\n      const formattedNewTime = newTime.map((t) => new Date(t));\n      onUpdateCallback({ error: isValuesNotValid, time: formattedNewTime });\n      return;\n    }\n\n    const formattedNewTime = newTime.map((t) => new Date(t));\n    onUpdateCallback({ error: false, time: formattedNewTime });\n  };\n\n  getDateTicks = () => {\n    const { timelineInterval, ticksNumber } = this.props;\n    return scaleTime()\n      .domain(timelineInterval ?? [startOfToday(), endOfToday()])\n      .ticks(ticksNumber)\n      .map((t) => +t);\n  };\n\n  render() {\n    const {\n      timelineInterval = defaultProps.timelineInterval,\n      selectedInterval = defaultProps.selectedInterval,\n      containerClassName = defaultProps.containerClassName,\n      error = defaultProps.error,\n      step = defaultProps.step,\n      showNow = defaultProps.showNow,\n      formatTick = defaultProps.formatTick,\n    } = this.props;\n\n    const domain = (timelineInterval ?? [startOfToday(), endOfToday()]).map(\n      (t) => Number(t),\n    );\n\n    const { disabledIntervals } = this;\n\n    return (\n      <TimeRangeContainer className={containerClassName}>\n        <Slider\n          step={step}\n          domain={domain.map((t) => +t)}\n          onUpdate={this.onUpdate}\n          onChange={this.onChange}\n          values={(\n            selectedInterval ?? [new Date(), addHours(new Date(), 1)]\n          ).map((t) => +t)}\n          rootStyle={{ position: 'relative', width: '100%' }}\n        >\n          <Rail>\n            {({ getRailProps }) => <SliderRail getRailProps={getRailProps} />}\n          </Rail>\n\n          <Handles>\n            {({ handles, getHandleProps }) => (\n              <>\n                {handles.map((handle) => (\n                  <Handle\n                    error={error ?? false}\n                    key={handle.id}\n                    handle={handle}\n                    domain={domain}\n                    getHandleProps={getHandleProps}\n                  />\n                ))}\n              </>\n            )}\n          </Handles>\n\n          <Tracks left={false} right={false}>\n            {({ tracks, getTrackProps }) => (\n              <>\n                {tracks?.map(({ id, source, target }) => (\n                  <Track\n                    error={error ?? false}\n                    key={id}\n                    source={source}\n                    target={target}\n                    getTrackProps={getTrackProps}\n                  />\n                ))}\n              </>\n            )}\n          </Tracks>\n\n          {disabledIntervals?.length && (\n            <Tracks left={false} right={false}>\n              {({ getTrackProps }) => (\n                <>\n                  {disabledIntervals.map(({ id, source, target, color }) => (\n                    <Track\n                      error={error ?? false}\n                      key={id}\n                      source={source}\n                      target={target}\n                      getTrackProps={getTrackProps}\n                      disabled={true}\n                      color={color} // Pass the color property here\n                    />\n                  ))}\n                </>\n              )}\n            </Tracks>\n          )}\n\n          {showNow && (\n            <Tracks left={false} right={false}>\n              {({ getTrackProps }) => (\n                <Track\n                  error={error ?? false}\n                  key={this.now?.id}\n                  source={this.now?.source}\n                  target={this.now?.target}\n                  getTrackProps={getTrackProps}\n                />\n              )}\n            </Tracks>\n          )}\n\n          <Ticks values={this.getDateTicks()}>\n            {({ ticks }) => (\n              <>\n                {ticks.map((tick) => (\n                  <Tick\n                    key={tick.id}\n                    tick={tick}\n                    count={ticks.length}\n                    format={\n                      formatTick ??\n                      ((ms: number) => format(new Date(ms), 'HH:mm'))\n                    }\n                  />\n                ))}\n              </>\n            )}\n          </Ticks>\n        </Slider>\n      </TimeRangeContainer>\n    );\n  }\n}\n\nTimeRange.defaultProps = defaultProps;\n\nexport default TimeRange;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}