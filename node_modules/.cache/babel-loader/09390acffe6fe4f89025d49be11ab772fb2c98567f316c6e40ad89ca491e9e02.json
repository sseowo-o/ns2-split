{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BTConnect = () => {\n  _s();\n  const encryptStorage = new EncryptStorage('SECRET_KEY');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [formData, setFormData] = useState({\n    user: '',\n    password: ''\n  });\n  const handleChange = ev => {\n    setFormData({\n      ...formData,\n      [ev.target.name]: ev.target.value\n    });\n  };\n  const handleCheck = () => {\n    if (rememberMe) {\n      encryptStorage.removeItem('loginCredentials');\n    }\n    setRememberMe(rememberMe => !rememberMe);\n  };\n  const handleSubmit = ev => {\n    if (rememberMe) {\n      encryptStorage.setItem('loginCredentials', JSON.stringify(formData));\n    }\n  };\n  useEffect(() => {\n    const storedData = encryptStorage.getItem('loginCredentials');\n    if (storedData) {\n      setRememberMe(true);\n      setFormData(storedData);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(BTConnect, \"K/CZbe7p8JgIuoXydrxTD9Xyo/k=\");\n_c = BTConnect;\nexport default BTConnect;\nvar _c;\n$RefreshReg$(_c, \"BTConnect\");","map":{"version":3,"names":["React","Fragment","_Fragment","jsxDEV","_jsxDEV","BTConnect","_s","encryptStorage","EncryptStorage","rememberMe","setRememberMe","useState","formData","setFormData","user","password","handleChange","ev","target","name","value","handleCheck","removeItem","handleSubmit","setItem","JSON","stringify","useEffect","storedData","getItem","_c","$RefreshReg$"],"sources":["/Users/seowoo/Desktop/neo_test/wifiapp/src/views/BTconnect/Connect.tsx"],"sourcesContent":["import React from 'react';\n\nconst BTConnect = () => {\n  const encryptStorage = new EncryptStorage('SECRET_KEY');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [formData, setFormData] = useState<Credentials>({\n    user: '',\n    password: '',\n  });\n\n  const handleChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [ev.target.name]: ev.target.value,\n    });\n  };\n  const handleCheck = () => {\n    if (rememberMe) {\n      encryptStorage.removeItem('loginCredentials');\n    }\n    setRememberMe((rememberMe) => !rememberMe);\n  };\n  const handleSubmit = (ev: React.FormEvent<HTMLFormElement>) => {\n    if (rememberMe) {\n      encryptStorage.setItem('loginCredentials', JSON.stringify(formData));\n    }\n  };\n\n  useEffect(() => {\n    const storedData = encryptStorage.getItem('loginCredentials');\n    if (storedData) {\n      setRememberMe(true);\n      setFormData(storedData);\n    }\n  }, []);\n\n  return <></>;\n};\nexport default BTConnect;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,cAAc,GAAG,IAAIC,cAAc,CAAC,YAAY,CAAC;EACvD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAc;IACpDG,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,EAAuC,IAAK;IAChEJ,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACK,EAAE,CAACC,MAAM,CAACC,IAAI,GAAGF,EAAE,CAACC,MAAM,CAACE;IAC9B,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIZ,UAAU,EAAE;MACdF,cAAc,CAACe,UAAU,CAAC,kBAAkB,CAAC;IAC/C;IACAZ,aAAa,CAAED,UAAU,IAAK,CAACA,UAAU,CAAC;EAC5C,CAAC;EACD,MAAMc,YAAY,GAAIN,EAAoC,IAAK;IAC7D,IAAIR,UAAU,EAAE;MACdF,cAAc,CAACiB,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,CAAC,CAAC;IACtE;EACF,CAAC;EAEDe,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAGrB,cAAc,CAACsB,OAAO,CAAC,kBAAkB,CAAC;IAC7D,IAAID,UAAU,EAAE;MACdlB,aAAa,CAAC,IAAI,CAAC;MACnBG,WAAW,CAACe,UAAU,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOxB,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACd,CAAC;AAACI,EAAA,CAnCID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}