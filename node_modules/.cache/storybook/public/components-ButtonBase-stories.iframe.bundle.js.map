{"version":3,"file":"components-ButtonBase-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sources":["webpack://wifiapp/./src/components/ButtonBase.tsx","webpack://wifiapp/./src/components/style.ts"],"sourcesContent":["import React, { FunctionComponent, HTMLProps } from 'react';\nimport { ButtonLayout, ButtonLayoutProps } from './style';\n\nexport interface ButtonProps\n  extends HTMLProps<HTMLButtonElement>,\n    ButtonLayoutProps {}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n  children,\n  buttonType,\n  isFull,\n}) => (\n  <ButtonLayout type=\"button\" buttonType={buttonType} isFull={isFull}>\n    {children}\n  </ButtonLayout>\n);\n\nexport default Button;\n","import styled, { css } from 'styled-components';\n\nexport interface ButtonLayoutProps {\n  buttonType: 'primary' | 'ghost' | 'default';\n  isFull?: boolean;\n}\n\nexport const defaultButtonStyles = css`\n  background: #e1e1e1;\n  color: #4b4b4b;\n\n  &:hover {\n    background: #e7e7e7;\n  }\n\n  &:active {\n    background: #d7d7d7;\n  }\n`;\n\nexport const primaryButtonStyles = css`\n  background: #33ccbd;\n  color: #fff;\n\n  &:hover {\n    background: #6fd0c6;\n  }\n\n  &:active {\n    background: #0b9688;\n  }\n`;\n\nexport const ghostButtonStyles = css`\n  background: transparent;\n  color: #33ccbd;\n  border: 1px solid #33ccbd;\n\n  &:hover {\n    background: #33ccbd;\n    color: #fff;\n  }\n\n  &:active {\n    background: #0b9688;\n  }\n`;\n\nexport const ButtonLayout = styled.button<ButtonLayoutProps>`\n  padding: 10px 30px;\n  border: none;\n  width: ${({ isFull }) => (isFull ? '100%' : 'auto')};\n  ${({ buttonType }) => {\n    switch (buttonType) {\n      case 'primary':\n        return primaryButtonStyles;\n      case 'ghost':\n        return ghostButtonStyles;\n      case 'default':\n        return defaultButtonStyles;\n      default:\n        return primaryButtonStyles;\n    }\n  }}\n`;\n\nexport default {\n  ButtonLayout,\n};\n"],"names":[],"sourceRoot":""}