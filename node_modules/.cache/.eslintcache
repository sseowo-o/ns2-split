[{"/Users/seowoo/Desktop/neo_test/wifiapp/src/index.tsx":"1","/Users/seowoo/Desktop/neo_test/wifiapp/src/App.tsx":"2","/Users/seowoo/Desktop/neo_test/wifiapp/src/reportWebVitals.ts":"3","/Users/seowoo/Desktop/neo_test/wifiapp/src/routes.ts":"4","/Users/seowoo/Desktop/neo_test/wifiapp/src/styles/GlobalStyles.jsx":"5","/Users/seowoo/Desktop/neo_test/wifiapp/src/views/BTconnect/Connect.tsx":"6","/Users/seowoo/Desktop/neo_test/wifiapp/src/component/Button/Button.tsx":"7","/Users/seowoo/Desktop/neo_test/wifiapp/src/component/Button/ButtonStyle.ts":"8","/Users/seowoo/Desktop/neo_test/wifiapp/src/component/Popup/Popup.tsx":"9","/Users/seowoo/Desktop/neo_test/wifiapp/src/component/Popup/PopupStyle.ts":"10","/Users/seowoo/Documents/GitHub/ns2-split/src/index.tsx":"11","/Users/seowoo/Documents/GitHub/ns2-split/src/reportWebVitals.ts":"12","/Users/seowoo/Documents/GitHub/ns2-split/src/App.tsx":"13","/Users/seowoo/Documents/GitHub/ns2-split/src/styles/theme.jsx":"14","/Users/seowoo/Documents/GitHub/ns2-split/src/views/Split/split.tsx":"15","/Users/seowoo/Documents/GitHub/ns2-split/src/styles/GlobalStyles.jsx":"16","/Users/seowoo/Documents/GitHub/ns2-split/src/views/Split/datesSource.tsx":"17","/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/App.tsx":"18","/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/SliderRail.tsx":"19","/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/Track.tsx":"20","/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/Tick.tsx":"21","/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/RandomTimeMarker.tsx":"22","/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/Handle.tsx":"23","/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/StyledComponents.tsx":"24"},{"size":414,"mtime":1689122633102,"results":"25","hashOfConfig":"26"},{"size":965,"mtime":1689551930770,"results":"27","hashOfConfig":"26"},{"size":425,"mtime":1689038102249,"results":"28","hashOfConfig":"26"},{"size":207,"mtime":1689227381759,"results":"29","hashOfConfig":"26"},{"size":626,"mtime":1689572691316,"results":"30","hashOfConfig":"26"},{"size":1926,"mtime":1689578636407,"results":"31","hashOfConfig":"26"},{"size":443,"mtime":1689574415314,"results":"32","hashOfConfig":"26"},{"size":1192,"mtime":1689573130738,"results":"33","hashOfConfig":"26"},{"size":1168,"mtime":1689578830912,"results":"34","hashOfConfig":"26"},{"size":526,"mtime":1689578573800,"results":"35","hashOfConfig":"26"},{"size":414,"mtime":1689122633102,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1689038102249,"results":"38","hashOfConfig":"37"},{"size":660,"mtime":1693878462831,"results":"39","hashOfConfig":"37"},{"size":1195,"mtime":1693791479272,"results":"40","hashOfConfig":"37"},{"size":1478,"mtime":1694745646475,"results":"41","hashOfConfig":"37"},{"size":524,"mtime":1693791269306,"results":"42","hashOfConfig":"37"},{"size":519,"mtime":1694745172242,"results":"43","hashOfConfig":"37"},{"size":6700,"mtime":1694745679611,"results":"44","hashOfConfig":"37"},{"size":357,"mtime":1694744659473,"results":"45","hashOfConfig":"37"},{"size":589,"mtime":1694738786092,"results":"46","hashOfConfig":"37"},{"size":817,"mtime":1694419640260,"results":"47","hashOfConfig":"37"},{"size":532,"mtime":1694670789955,"results":"48","hashOfConfig":"37"},{"size":785,"mtime":1694676866211,"results":"49","hashOfConfig":"37"},{"size":2366,"mtime":1694738552120,"results":"50","hashOfConfig":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vw14ke",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17zfnp0",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seowoo/Desktop/neo_test/wifiapp/src/index.tsx",[],[],"/Users/seowoo/Desktop/neo_test/wifiapp/src/App.tsx",["126","127","128"],[],"/Users/seowoo/Desktop/neo_test/wifiapp/src/reportWebVitals.ts",[],[],"/Users/seowoo/Desktop/neo_test/wifiapp/src/routes.ts",[],[],"/Users/seowoo/Desktop/neo_test/wifiapp/src/styles/GlobalStyles.jsx",[],[],"/Users/seowoo/Desktop/neo_test/wifiapp/src/views/BTconnect/Connect.tsx",["129","130"],[],"/Users/seowoo/Desktop/neo_test/wifiapp/src/component/Button/Button.tsx",[],[],"/Users/seowoo/Desktop/neo_test/wifiapp/src/component/Button/ButtonStyle.ts",[],[],"/Users/seowoo/Desktop/neo_test/wifiapp/src/component/Popup/Popup.tsx",["131","132","133"],[],"/Users/seowoo/Desktop/neo_test/wifiapp/src/component/Popup/PopupStyle.ts",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/index.tsx",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/reportWebVitals.ts",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/App.tsx",["134"],[],"import React, { useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from 'styles/GlobalStyles';\n\nimport './App.scss';\n\nimport Split from './views/Split/split';\n\nimport { darkTheme, lightTheme } from './styles/theme';\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <GlobalStyles />\n      <Routes>\n        <Route path=\"/split\" element={<Split />} />\n        <Route path=\"*\" element={<Split />} />\n      </Routes>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","/Users/seowoo/Documents/GitHub/ns2-split/src/styles/theme.jsx",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/views/Split/split.tsx",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/styles/GlobalStyles.jsx",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/views/Split/datesSource.tsx",["135"],[],"import { set } from 'date-fns';\nimport { useState } from 'react';\n\nconst now = new Date();\n\nconst getTodayAtSpecificHour = (hour = 12) =>\n  set(now, { hours: hour, minutes: 0, seconds: 0, milliseconds: 0 });\n\nexport const randomTimes: [Date, Date, Date] = [\n  getTodayAtSpecificHour(3),\n  getTodayAtSpecificHour(8),\n  getTodayAtSpecificHour(18),\n];\n\nexport const selectedInterval: [Date] = [randomTimes[0]];\n\nexport const timelineInterval: [Date, Date] = [\n  getTodayAtSpecificHour(0),\n  getTodayAtSpecificHour(24),\n];\n","/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/App.tsx",["136","137"],[],"import React, { useState } from 'react';\nimport { scaleTime } from 'd3-scale';\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider';\nimport {\n  format,\n  addHours,\n  startOfToday,\n  endOfToday,\n  differenceInMilliseconds,\n  addMinutes,\n} from 'date-fns';\n\nimport SliderRail from './SliderRail';\nimport Track from './Track';\nimport Tick from './Tick';\nimport Handle from './Handle';\nimport RandomTimeMarker from './RandomTimeMarker';\nimport { TimeRangeContainer } from './StyledComponents';\nimport { UpdateCallbackData } from './types';\n\ninterface TimeRangeProps {\n  ticksNumber?: number /* 타임라인의 단계 수(기본값은 30분) */;\n  selectedInterval?: [Date] /* 타임라인 내에서 선택한 간격 */;\n  timelineInterval?: [Date, Date] /* 표시간격 */;\n  /* 포장 컨테이너의 ClassName */\n  containerClassName?: string;\n  sliderRailClassName?: string;\n  step?: number /* 단계 사이의 밀리초 수(기본값은 30분) */;\n  formatTick?: (\n    ms: number,\n  ) => string /* 날짜가 표시되는 형식을 결정하는 함수 */;\n  onChangeCallback?: (formattedNewTime: [Date]) => void;\n  onUpdateCallback?: (data: UpdateCallbackData) => void;\n  randomTimes?: [Date, Date, Date];\n}\n\nconst defaultProps: TimeRangeProps = {\n  /* timelineInterval: [startOfToday(), endOfToday()], */\n  /* selectedInterval: [new Date()], */\n  containerClassName: '',\n  step: 1800000, // 30 minutes in milliseconds\n  ticksNumber: 48, // 30 minutes * 48 = 24 hours\n  formatTick: (ms: number) => format(new Date(ms), 'HH:mm'),\n  onChangeCallback: () => 'Change callback not set',\n  onUpdateCallback: () => 'Update callback not set',\n};\n\nconst getTimelineConfig =\n  (timelineStart: Date, timelineLength: number) =>\n  (date: Date, idPrefix: string) => {\n    const percent =\n      (differenceInMilliseconds(date, timelineStart) / timelineLength) * 100;\n    const value = Number(format(date, 'T'));\n    const id = `${idPrefix}-${value}`;\n    return { id, percent, value };\n  };\n\nconst getNowConfig = ([startTime, endTime]: Date[]) => {\n  const timelineLength = differenceInMilliseconds(endTime, startTime);\n  const getConfig = getTimelineConfig(startTime, timelineLength);\n  const source = getConfig(new Date(), 'now-start');\n  const target = getConfig(addMinutes(new Date(), 1), 'now-end');\n  return { id: 'now-track', source, target };\n};\n\nfunction TimeRange(props: TimeRangeProps) {\n  const [nowConfig, setNowConfig] = useState(\n    getNowConfig(props.timelineInterval ?? [startOfToday(), endOfToday()]),\n  );\n\n  const onChange = (newTime: ReadonlyArray<number>) => {\n    const formattedNewTime = newTime.map((t) => new Date(t));\n    if (props.onChangeCallback) {\n      props.onChangeCallback([formattedNewTime[0]]);\n    }\n  };\n\n  const onUpdate = (newTime: ReadonlyArray<number>) => {\n    const { onUpdateCallback } = props;\n\n    if (!onUpdateCallback) {\n      return;\n    }\n\n    const formattedNewTime = newTime.map((t) => new Date(t));\n    onUpdateCallback({ error: false, time: formattedNewTime });\n  };\n\n  const getDateTicks = () => {\n    const { timelineInterval, ticksNumber } = props;\n    return scaleTime()\n      .domain(timelineInterval ?? [startOfToday(), endOfToday()])\n      .ticks(ticksNumber)\n      .map((t) => +t);\n  };\n\n  const timelineInterval = props.timelineInterval || [\n    startOfToday(),\n    endOfToday(),\n  ];\n\n  return (\n    <TimeRangeContainer className={props.containerClassName}>\n      <Slider\n        step={props.step}\n        domain={(props.timelineInterval ?? [startOfToday(), endOfToday()]).map(\n          (t) => +t,\n        )}\n        onUpdate={onUpdate}\n        onChange={onChange}\n        values={(\n          props.selectedInterval ?? [new Date(), addHours(new Date(), 1)]\n        ).map((t) => +t)}\n        rootStyle={{ position: 'relative', width: '100%', height: '5rem' }}\n      >\n        <Rail>\n          {({ getRailProps }) => <SliderRail getRailProps={getRailProps} />}\n        </Rail>\n        <Handles>\n          {({ handles, getHandleProps }) => (\n            <>\n              {handles.map((handle) => (\n                <Handle\n                  key={handle.id}\n                  handle={handle}\n                  domain={(\n                    props.timelineInterval ?? [startOfToday(), endOfToday()]\n                  ).map((t) => +t)}\n                  getHandleProps={getHandleProps}\n                />\n              ))}\n            </>\n          )}\n        </Handles>\n        <Tracks left={false} right={true}>\n          {({ tracks, getTrackProps }) => (\n            <>\n              {tracks?.map(({ id, source, target }) => (\n                <Track\n                  key={id}\n                  source={source}\n                  target={target}\n                  getTrackProps={getTrackProps}\n                />\n              ))}\n            </>\n          )}\n        </Tracks>\n        {props.randomTimes &&\n          props.randomTimes.map((randomTime) => {\n            const timelineLength = differenceInMilliseconds(\n              timelineInterval[1],\n              timelineInterval[0],\n            );\n            const randomTimePosition =\n              (differenceInMilliseconds(randomTime, timelineInterval[0]) /\n                timelineLength) *\n              100;\n            const randomKey = `random-${randomTime.getTime()}`;\n            return (\n              <div key={randomKey}>\n                <RandomTimeMarker\n                  time={randomTime}\n                  position={randomTimePosition}\n                />\n                <Tracks left={false} right={true}>\n                  {({ tracks, getTrackProps }) => (\n                    <>\n                      {tracks?.map(({ source, target }) => (\n                        <Track\n                          key={`random-track-${randomTime.getTime()}`}\n                          source={source}\n                          target={target}\n                          getTrackProps={getTrackProps}\n                        />\n                      ))}\n                    </>\n                  )}\n                </Tracks>\n              </div>\n            );\n          })}\n\n        <Ticks values={getDateTicks()}>\n          {({ ticks }) => (\n            <>\n              {ticks.map((tick) => (\n                <Tick\n                  key={tick.id}\n                  tick={tick}\n                  count={ticks.length}\n                  format={\n                    props.formatTick ??\n                    ((ms: number) => format(new Date(ms), 'HH:mm'))\n                  }\n                />\n              ))}\n            </>\n          )}\n        </Ticks>\n      </Slider>\n    </TimeRangeContainer>\n  );\n}\n\nTimeRange.defaultProps = defaultProps;\n\nexport default TimeRange;\n","/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/SliderRail.tsx",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/Track.tsx",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/Tick.tsx",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/RandomTimeMarker.tsx",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/Handle.tsx",[],[],"/Users/seowoo/Documents/GitHub/ns2-split/src/components/TimelineSlider/StyledComponents.tsx",[],[],{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"142","line":2,"column":25,"nodeType":"140","messageId":"141","endLine":2,"endColumn":36},{"ruleId":"138","severity":1,"message":"143","line":4,"column":13,"nodeType":"140","messageId":"141","endLine":4,"endColumn":19},{"ruleId":"138","severity":1,"message":"144","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":14},{"ruleId":"138","severity":1,"message":"145","line":12,"column":16,"nodeType":"140","messageId":"141","endLine":12,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":13,"column":6,"nodeType":"148","messageId":"149","endLine":13,"endColumn":20},{"ruleId":"146","severity":1,"message":"150","line":14,"column":8,"nodeType":"148","messageId":"149","endLine":14,"endColumn":17},{"ruleId":"146","severity":1,"message":"151","line":15,"column":8,"nodeType":"148","messageId":"149","endLine":15,"endColumn":16},{"ruleId":"138","severity":1,"message":"152","line":13,"column":20,"nodeType":"140","messageId":"141","endLine":13,"endColumn":31},{"ruleId":"138","severity":1,"message":"153","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"138","severity":1,"message":"154","line":67,"column":10,"nodeType":"140","messageId":"141","endLine":67,"endColumn":19},{"ruleId":"138","severity":1,"message":"155","line":67,"column":21,"nodeType":"140","messageId":"141","endLine":67,"endColumn":33},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'ROUTES' is defined but never used.","'Main' is defined but never used.","'Title' is defined but never used.","no-use-before-define","'ModalContainer' was used before it was defined.","JSXIdentifier","usedBeforeDefined","'DialogBox' was used before it was defined.","'Backdrop' was used before it was defined.","'setDarkMode' is assigned a value but never used.","'useState' is defined but never used.","'nowConfig' is assigned a value but never used.","'setNowConfig' is assigned a value but never used."]