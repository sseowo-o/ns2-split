import { __assign, __makeTemplateObject } from "tslib";
import React from 'react';
import styled from '@emotion/styled';
var StyledKeyboardHandle = styled.button(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: absolute;\n  transform: translate(-50%, -50%);\n  z-index: 3;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.3);\n  left: ", ";\n  background-color: ", ";\n  ", ";\n"], ["\n  position: absolute;\n  transform: translate(-50%, -50%);\n  z-index: 3;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.3);\n  left: ", ";\n  background-color: ", ";\n  ", ";\n"])), function (_a) {
    var left = _a.left;
    return left;
}, function (_a) {
    var backgroundColor = _a.backgroundColor;
    return backgroundColor;
}, function (_a) {
    var css = _a.css;
    return css;
});
var KeyboardHandle = function (_a) {
    var _b = _a.domain, min = _b[0], max = _b[1], _c = _a.handle, id = _c.id, value = _c.value, _d = _c.percent, percent = _d === void 0 ? 0 : _d, disabled = _a.disabled, getHandleProps = _a.getHandleProps;
    return (React.createElement(StyledKeyboardHandle, __assign({ role: 'slider', "aria-valuemin": min, "aria-valuemax": max, "aria-valuenow": value, left: "".concat(percent, "%"), backgroundColor: disabled ? '#666' : '#ffc400', css: null }, getHandleProps(id))));
};
KeyboardHandle.defaultProps = { disabled: false };
export default KeyboardHandle;
var templateObject_1;
//# sourceMappingURL=KeyboardHandle.js.map