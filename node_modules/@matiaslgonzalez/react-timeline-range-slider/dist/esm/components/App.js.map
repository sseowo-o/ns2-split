{"version":3,"file":"App.js","sourceRoot":"","sources":["../../../src/components/App.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport { scaleTime } from 'd3-scale'\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\nimport {\n  format,\n  addHours,\n  startOfToday,\n  endOfToday,\n  differenceInMilliseconds,\n  isBefore,\n  isAfter,\n  addMinutes,\n} from 'date-fns'\n\nimport SliderRail from './SliderRail'\nimport Track from './Track'\nimport Tick from './Tick'\nimport Handle from './Handle'\nimport { TimeRangeContainer } from './StyledComponents'\nimport { DisabledInterval, UpdateCallbackData } from '../types'\n\ninterface TimeRangeProps {\n  /** Number of steps on the timeline (the default value is 30 minutes) */\n  ticksNumber?: number\n  /** Selected interval inside the timeline */\n  selectedInterval?: [Date, Date]\n  /** Interval to display */\n  timelineInterval?: [Date, Date]\n  /** Array of disabled intervals inside the timeline */\n  disabledIntervals?: DisabledInterval[]\n  /** ClassName of the wrapping container */\n  containerClassName?: string\n  sliderRailClassName?: string\n  /** Number of milliseconds between steps (the default value is 30 minutes) */\n  step?: number\n  /** Function that determines the format in which the date will be displayed */\n  formatTick?: (ms: number) => string\n  /** Is the selected interval is not valid */\n  error?: boolean\n  /** The interaction mode. Value of 1 will allow handles to cross each other.\n   * Value of 2 will keep the sliders from crossing and separated by a step.\n   * Value of 3 will make the handles pushable and keep them a step apart.\n   * ADVANCED: You can also supply a function that will be passed the current\n   * values and the incoming update. Your function should return what the state\n   * should be set as. */\n  mode?: number\n  onChangeCallback: (formattedNewTime: [Date, Date]) => void\n  onUpdateCallback: (data: UpdateCallbackData) => void\n  /**\n   * Set this variable to true if you want to show a line on the timeline that represents the current time.\n   */\n  showNow: boolean\n}\n\nconst defaultProps: TimeRangeProps = {\n  timelineInterval: [startOfToday(), endOfToday()],\n  selectedInterval: [new Date(), addHours(new Date(), 1)],\n  disabledIntervals: [],\n  containerClassName: '',\n  step: 1000 * 60 * 30, // 30 minutes in milliseconds\n  ticksNumber: 48, // 30 minutes * 48 = 24 hours\n  error: false,\n  mode: 3,\n  formatTick: (ms: number) => format(new Date(ms), 'HH:mm'),\n  showNow: true,\n  onChangeCallback: () => 'Change callback not set',\n  onUpdateCallback: () => 'Update callback not set',\n}\n\nconst getTimelineConfig = (timelineStart: Date, timelineLength: number) => (date: Date, idPrefix: string) => {\n  const percent = (differenceInMilliseconds(date, timelineStart) / timelineLength) * 100\n  const value = Number(format(date, 'T'))\n  const id = `${idPrefix}-${value}`\n  return { id, percent, value }\n}\n\nconst getFormattedBlockedIntervals = (blockedDates: DisabledInterval[] = [], [startTime, endTime]: Date[]) => {\n  if (!blockedDates.length) return null\n\n  const timelineLength = differenceInMilliseconds(endTime, startTime)\n  const getConfig = getTimelineConfig(startTime, timelineLength)\n\n  const formattedBlockedDates = blockedDates.map((interval, index) => {\n    let { start, end } = interval\n    const { color } = interval\n\n    if (isBefore(start, startTime)) start = startTime\n    if (isAfter(end, endTime)) end = endTime\n\n    const source = getConfig(start, 'blocked-start')\n    const target = getConfig(end, 'blocked-end')\n\n    return { id: `blocked-track-${index}`, source, target, color }\n  })\n\n  return formattedBlockedDates\n}\n\nconst getNowConfig = ([startTime, endTime]: Date[]) => {\n  const timelineLength = differenceInMilliseconds(endTime, startTime)\n  const getConfig = getTimelineConfig(startTime, timelineLength)\n  const source = getConfig(new Date(), 'now-start')\n  const target = getConfig(addMinutes(new Date(), 1), 'now-end')\n  return { id: 'now-track', source, target }\n}\n\nclass TimeRange extends React.Component<TimeRangeProps> {\n  static defaultProps: Partial<TimeRangeProps> = {\n    timelineInterval: [startOfToday(), endOfToday()],\n    selectedInterval: [new Date(), addHours(new Date(), 1)],\n    disabledIntervals: [],\n    containerClassName: '',\n    step: 1000 * 60 * 30, // 30 minutes in milliseconds\n    ticksNumber: 48, // 30 minutes * 48 = 24 hours\n    error: false,\n    mode: 3,\n    formatTick: (ms: number) => format(new Date(ms), 'HH:mm'),\n    showNow: true,\n  }\n  get disabledIntervals() {\n    return getFormattedBlockedIntervals(\n      this.props.disabledIntervals,\n      this.props.timelineInterval ?? [startOfToday(), endOfToday()],\n    )\n  }\n\n  get now() {\n    return getNowConfig(this.props.timelineInterval ?? [startOfToday(), endOfToday()])\n  }\n\n  onChange = (newTime: ReadonlyArray<number>) => {\n    const formattedNewTime = newTime.map((t) => new Date(t))\n    if (this.props.onChangeCallback) {\n      this.props.onChangeCallback([formattedNewTime[0], formattedNewTime[1]])\n    }\n  }\n\n  checkIsSelectedIntervalNotValid = (\n    [start, end]: [number, number],\n    source: { value: number },\n    target: { value: number },\n  ) => {\n    const { value: startInterval } = source\n    const { value: endInterval } = target\n\n    if ((startInterval > start && endInterval <= end) || (startInterval >= start && endInterval < end)) return true\n    if (start >= startInterval && end <= endInterval) return true\n\n    const isStartInBlockedInterval = start > startInterval && start < endInterval && end >= endInterval\n    const isEndInBlockedInterval = end < endInterval && end > startInterval && start <= startInterval\n\n    return isStartInBlockedInterval || isEndInBlockedInterval\n  }\n\n  onUpdate = (newTime: ReadonlyArray<number>) => {\n    const { onUpdateCallback } = this.props\n    const disabledIntervals = this.disabledIntervals\n    if (!onUpdateCallback) {\n      return\n    }\n\n    if (disabledIntervals?.length) {\n      const isValuesNotValid = disabledIntervals.some(({ source, target }) =>\n        this.checkIsSelectedIntervalNotValid([newTime[0], newTime[1]], source, target),\n      )\n      const formattedNewTime = newTime.map((t) => new Date(t))\n      onUpdateCallback({ error: isValuesNotValid, time: formattedNewTime })\n      return\n    }\n\n    const formattedNewTime = newTime.map((t) => new Date(t))\n    onUpdateCallback({ error: false, time: formattedNewTime })\n  }\n\n  getDateTicks = () => {\n    const { timelineInterval, ticksNumber } = this.props\n    return scaleTime()\n      .domain(timelineInterval ?? [startOfToday(), endOfToday()])\n      .ticks(ticksNumber)\n      .map((t) => +t)\n  }\n\n  render() {\n    const {\n      timelineInterval = defaultProps.timelineInterval,\n      selectedInterval = defaultProps.selectedInterval,\n      containerClassName = defaultProps.containerClassName,\n      error = defaultProps.error,\n      step = defaultProps.step,\n      showNow = defaultProps.showNow,\n      formatTick = defaultProps.formatTick,\n    } = this.props\n\n    const domain = (timelineInterval ?? [startOfToday(), endOfToday()]).map((t) => Number(t))\n\n    const disabledIntervals = this.disabledIntervals\n\n    return (\n      <TimeRangeContainer className={containerClassName}>\n        <Slider\n          step={step}\n          domain={domain.map((t) => +t)}\n          onUpdate={this.onUpdate}\n          onChange={this.onChange}\n          values={(selectedInterval ?? [new Date(), addHours(new Date(), 1)]).map((t) => +t)}\n          rootStyle={{ position: 'relative', width: '100%' }}\n        >\n          <Rail>{({ getRailProps }) => <SliderRail getRailProps={getRailProps} />}</Rail>\n\n          <Handles>\n            {({ handles, getHandleProps }) => (\n              <>\n                {handles.map((handle) => (\n                  <Handle\n                    error={error ?? false}\n                    key={handle.id}\n                    handle={handle}\n                    domain={domain}\n                    getHandleProps={getHandleProps}\n                  />\n                ))}\n              </>\n            )}\n          </Handles>\n\n          <Tracks left={false} right={false}>\n            {({ tracks, getTrackProps }) => (\n              <>\n                {tracks?.map(({ id, source, target }) => (\n                  <Track\n                    error={error ?? false}\n                    key={id}\n                    source={source}\n                    target={target}\n                    getTrackProps={getTrackProps}\n                  />\n                ))}\n              </>\n            )}\n          </Tracks>\n\n          {disabledIntervals?.length && (\n            <Tracks left={false} right={false}>\n              {({ getTrackProps }) => (\n                <>\n                  {disabledIntervals.map(({ id, source, target, color }) => (\n                    <Track\n                      error={error ?? false}\n                      key={id}\n                      source={source}\n                      target={target}\n                      getTrackProps={getTrackProps}\n                      disabled={true}\n                      color={color} // Pass the color property here\n                    />\n                  ))}\n                </>\n              )}\n            </Tracks>\n          )}\n\n          {showNow && (\n            <Tracks left={false} right={false}>\n              {({ getTrackProps }) => (\n                <Track\n                  error={error ?? false}\n                  key={this.now?.id}\n                  source={this.now?.source}\n                  target={this.now?.target}\n                  getTrackProps={getTrackProps}\n                />\n              )}\n            </Tracks>\n          )}\n\n          <Ticks values={this.getDateTicks()}>\n            {({ ticks }) => (\n              <>\n                {ticks.map((tick) => (\n                  <Tick\n                    key={tick.id}\n                    tick={tick}\n                    count={ticks.length}\n                    format={formatTick ?? ((ms: number) => format(new Date(ms), 'HH:mm'))}\n                  />\n                ))}\n              </>\n            )}\n          </Ticks>\n        </Slider>\n      </TimeRangeContainer>\n    )\n  }\n}\n\nTimeRange.defaultProps = defaultProps\n\nexport default TimeRange\n"]}